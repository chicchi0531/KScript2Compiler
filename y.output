
state 0
	$accept: .program $end 

	VAR  shift 12
	FUNC  shift 11
	IMPORT  shift 10
	TYPE  shift 13
	EOL  shift 9
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7
	type_decl  goto 8

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 12
	FUNC  shift 11
	IMPORT  shift 10
	TYPE  shift 13
	EOL  shift 9
	.  error

	define_or_state  goto 14
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7
	type_decl  goto 8

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 105)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 109)


state 4
	define_or_state:  import.    (4)

	.  reduce 4 (src line 111)


state 5
	define_or_state:  function_define.eol 

	EOL  shift 9
	.  error

	eol  goto 15

state 6
	define_or_state:  global_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 16

state 7
	define_or_state:  function_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 17

state 8
	define_or_state:  type_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 18

state 9
	eol:  EOL.    (124)

	.  reduce 124 (src line 327)


state 10
	import:  IMPORT.STRING_LITERAL 

	STRING_LITERAL  shift 19
	.  error


state 11
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 20
	.  error


state 12
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 
	global_decl:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 21
	.  error


state 13
	type_decl:  TYPE.IDENTIFIER STRUCT '{' member_list '}' 

	IDENTIFIER  shift 22
	.  error


state 14
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 107)


state 15
	define_or_state:  function_define eol.    (5)

	.  reduce 5 (src line 112)


state 16
	define_or_state:  global_decl eol.    (6)

	.  reduce 6 (src line 113)


state 17
	define_or_state:  function_decl eol.    (7)

	.  reduce 7 (src line 114)


state 18
	define_or_state:  type_decl eol.    (8)

	.  reduce 8 (src line 115)


state 19
	import:  IMPORT STRING_LITERAL.    (9)

	.  reduce 9 (src line 117)


state 20
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 23
	.  error


state 21
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 
	global_decl:  VAR IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 25
	.  error

	var_type  goto 24

state 22
	type_decl:  TYPE IDENTIFIER.STRUCT '{' member_list '}' 

	STRUCT  shift 30
	.  error


state 23
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (15)

	IDENTIFIER  shift 33
	.  reduce 15 (src line 131)

	arg_decl  goto 32
	arg_list  goto 31

state 24
	global_decl:  VAR IDENTIFIER var_type.    (10)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 34
	.  reduce 10 (src line 120)


state 25
	global_decl:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 35
	.  error


state 26
	var_type:  INT.    (114)

	.  reduce 114 (src line 313)


state 27
	var_type:  FLOAT.    (115)

	.  reduce 115 (src line 315)


state 28
	var_type:  STRING.    (116)

	.  reduce 116 (src line 316)


state 29
	var_type:  IDENTIFIER.    (117)

	.  reduce 117 (src line 317)


state 30
	type_decl:  TYPE IDENTIFIER STRUCT.'{' member_list '}' 

	'{'  shift 36
	.  error


state 31
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 37
	','  shift 38
	.  error


state 32
	arg_list:  arg_decl.    (16)

	.  reduce 16 (src line 133)


state 33
	arg_decl:  IDENTIFIER.var_type 
	arg_decl:  IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 40
	.  error

	var_type  goto 39

state 34
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 41
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 35
	global_decl:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 53
	.  error


state 36
	type_decl:  TYPE IDENTIFIER STRUCT '{'.member_list '}' 

	IDENTIFIER  shift 33
	EOL  shift 9
	.  error

	arg_decl  goto 57
	member_list  goto 54
	member  goto 55
	eol  goto 56

state 37
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (118)

	IDENTIFIER  shift 63
	INT  shift 59
	FLOAT  shift 60
	STRING  shift 61
	VOID  shift 62
	.  reduce 118 (src line 319)

	function_type  goto 58

state 38
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 33
	.  error

	arg_decl  goto 64

state 39
	arg_decl:  IDENTIFIER var_type.    (18)

	.  reduce 18 (src line 136)


state 40
	arg_decl:  IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 65
	.  error


state 41
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (11)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 11 (src line 122)


state 42
	expr:  const.    (81)

	.  reduce 81 (src line 268)


state 43
	expr:  MINUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 81
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 44
	expr:  value.    (83)

	.  reduce 83 (src line 271)


state 45
	expr:  uni_expr.    (84)

	.  reduce 84 (src line 272)


state 46
	expr:  function_call.    (85)

	.  reduce 85 (src line 273)


state 47
	expr:  '('.expr ')' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 82
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 48
	const:  STRING_LITERAL.    (111)

	.  reduce 111 (src line 308)


state 49
	const:  INUM.    (112)

	.  reduce 112 (src line 310)


state 50
	const:  FNUM.    (113)

	.  reduce 113 (src line 311)


state 51
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	'('  shift 83
	'['  shift 84
	'.'  shift 85
	.  reduce 104 (src line 297)


state 52
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 86
	.  error


state 53
	global_decl:  VAR IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 87

state 54
	type_decl:  TYPE IDENTIFIER STRUCT '{' member_list.'}' 
	member_list:  member_list.member 

	IDENTIFIER  shift 33
	EOL  shift 9
	'}'  shift 88
	.  error

	arg_decl  goto 57
	member  goto 89
	eol  goto 56

state 55
	member_list:  member.    (21)

	.  reduce 21 (src line 143)


state 56
	member:  eol.    (23)

	.  reduce 23 (src line 153)


state 57
	member:  arg_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 90

state 58
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (13)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 92
	.  reduce 13 (src line 125)

	block  goto 91

state 59
	function_type:  INT.    (119)

	.  reduce 119 (src line 321)


state 60
	function_type:  FLOAT.    (120)

	.  reduce 120 (src line 322)


state 61
	function_type:  STRING.    (121)

	.  reduce 121 (src line 323)


state 62
	function_type:  VOID.    (122)

	.  reduce 122 (src line 324)


state 63
	function_type:  IDENTIFIER.    (123)

	.  reduce 123 (src line 325)


state 64
	arg_list:  arg_list ',' arg_decl.    (17)

	.  reduce 17 (src line 134)


state 65
	arg_decl:  IDENTIFIER '[' INUM.']' var_type 

	']'  shift 93
	.  error


state 66
	expr:  expr PLUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 94
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 67
	expr:  expr MINUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 95
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 68
	expr:  expr ASTARISK.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 96
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 69
	expr:  expr SLASH.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 97
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 70
	expr:  expr PERCENT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 98
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 71
	expr:  expr EQ.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 99
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 72
	expr:  expr NEQ.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 100
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 73
	expr:  expr GT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 101
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 74
	expr:  expr GE.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 102
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 75
	expr:  expr LT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 103
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 76
	expr:  expr LE.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 104
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 77
	expr:  expr AND.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 105
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 78
	expr:  expr OR.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 106
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 79
	uni_expr:  expr INCR.    (100)

	.  reduce 100 (src line 289)


state 80
	uni_expr:  expr DECR.    (101)

	.  reduce 101 (src line 291)


state 81
	expr:  MINUS expr.    (82)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 82 (src line 270)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	')'  shift 107
	.  error


state 83
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (108)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 108 (src line 303)

	expr  goto 109
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44
	args  goto 108

state 84
	value:  IDENTIFIER '['.expr ']' 
	value:  IDENTIFIER '['.expr ']' '.' value 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 110
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 85
	value:  IDENTIFIER '.'.value 

	IDENTIFIER  shift 112
	.  error

	value  goto 111

state 86
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 113
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 87
	global_decl:  VAR IDENTIFIER '[' INUM ']' var_type.    (12)

	.  reduce 12 (src line 123)


state 88
	type_decl:  TYPE IDENTIFIER STRUCT '{' member_list '}'.    (20)

	.  reduce 20 (src line 140)


state 89
	member_list:  member_list member.    (22)

	.  reduce 22 (src line 151)


state 90
	member:  arg_decl eol.    (24)

	.  reduce 24 (src line 155)


state 91
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (14)

	.  reduce 14 (src line 128)


state 92
	block:  '{'.statements '}' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statements  goto 114
	statement  goto 115
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

state 93
	arg_decl:  IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 145

state 94
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (86)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	INCR  shift 79
	DECR  shift 80
	.  reduce 86 (src line 274)


state 95
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (87)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	INCR  shift 79
	DECR  shift 80
	.  reduce 87 (src line 275)


state 96
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (88)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 79
	DECR  shift 80
	.  reduce 88 (src line 276)


state 97
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (89)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 79
	DECR  shift 80
	.  reduce 89 (src line 277)


state 98
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (90)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 79
	DECR  shift 80
	.  reduce 90 (src line 278)


state 99
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (91)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 91 (src line 279)


state 100
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (92)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 92 (src line 280)


state 101
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (93)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 93 (src line 281)


state 102
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (94)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 94 (src line 282)


state 103
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (95)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 95 (src line 283)


state 104
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (96)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 79
	DECR  shift 80
	.  reduce 96 (src line 284)


state 105
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (97)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	INCR  shift 79
	DECR  shift 80
	.  reduce 97 (src line 285)


state 106
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (98)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	INCR  shift 79
	DECR  shift 80
	.  reduce 98 (src line 286)


state 107
	expr:  '(' expr ')'.    (99)

	.  reduce 99 (src line 287)


state 108
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 146
	','  shift 147
	.  error


state 109
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (109)

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 109 (src line 305)


state 110
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 
	value:  IDENTIFIER '[' expr.']' '.' value 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	']'  shift 148
	.  error


state 111
	value:  IDENTIFIER '.' value.    (106)

	.  reduce 106 (src line 300)


state 112
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	'['  shift 84
	'.'  shift 85
	.  reduce 104 (src line 297)


state 113
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	']'  shift 149
	.  error


state 114
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	'}'  shift 150
	.  error

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statement  goto 151
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

state 115
	statements:  statement.    (26)

	.  reduce 26 (src line 163)


state 116
	statement:  eol.    (28)

	.  reduce 28 (src line 167)


state 117
	statement:  expr_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 152

state 118
	statement:  assign_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 153

state 119
	statement:  define_var_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 154

state 120
	statement:  return_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 155

state 121
	statement:  function_call_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 156

state 122
	statement:  if_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 157

state 123
	statement:  for_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 158

state 124
	statement:  break_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 159

state 125
	statement:  continue_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 160

state 126
	statement:  switch_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 161

state 127
	statement:  fallthrough_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 162

state 128
	statement:  dump_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 163

state 129
	expr_statement:  uni_expr.    (41)
	expr:  uni_expr.    (84)

	EOL  reduce 41 (src line 182)
	'{'  reduce 41 (src line 182)
	.  reduce 84 (src line 272)


state 130
	assign_statement:  assign.    (42)

	.  reduce 42 (src line 185)


state 131
	define_var_statement:  define_var.    (43)

	.  reduce 43 (src line 188)


state 132
	return_statement:  RETURN.    (44)
	return_statement:  RETURN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 44 (src line 191)

	expr  goto 164
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 133
	function_call_statement:  function_call.    (46)
	expr:  function_call.    (85)

	EOL  reduce 46 (src line 195)
	.  reduce 85 (src line 273)


state 134
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 165
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 135
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 167
	const  goto 42
	define_var  goto 169
	function_call  goto 46
	uni_expr  goto 45
	assign  goto 168
	value  goto 142
	for_init  goto 166

state 136
	break_statement:  BREAK.    (56)

	.  reduce 56 (src line 215)


state 137
	continue_statement:  CONTINUE.    (57)

	.  reduce 57 (src line 218)


state 138
	switch_statement:  SWITCH.expr '{' eols cases '}' 
	switch_statement:  SWITCH.expr '{' eols cases default_statement '}' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 170
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 139
	fallthrough_statement:  FALLTHROUGH.    (66)

	.  reduce 66 (src line 239)


state 140
	dump_statement:  DUMP.'(' STRING_LITERAL ')' 
	dump_statement:  DUMP.    (68)

	'('  shift 171
	.  reduce 68 (src line 244)


state 141
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  error


state 142
	assign:  value.assign_op expr 
	expr:  value.    (83)

	P_EQ  shift 174
	M_EQ  shift 175
	A_EQ  shift 176
	S_EQ  shift 177
	MOD_EQ  shift 178
	ASSIGN  shift 173
	.  reduce 83 (src line 271)

	assign_op  goto 172

state 143
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 
	define_var:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 179
	.  error


state 144
	define_var:  IDENTIFIER.DECL_ASSIGN expr 
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	DECL_ASSIGN  shift 180
	'('  shift 83
	'['  shift 84
	'.'  shift 85
	.  reduce 104 (src line 297)


state 145
	arg_decl:  IDENTIFIER '[' INUM ']' var_type.    (19)

	.  reduce 19 (src line 138)


state 146
	function_call:  IDENTIFIER '(' args ')'.    (102)

	.  reduce 102 (src line 293)


state 147
	args:  args ','.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 181
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 148
	value:  IDENTIFIER '[' expr ']'.    (105)
	value:  IDENTIFIER '[' expr ']'.'.' value 

	'.'  shift 182
	.  reduce 105 (src line 299)


state 149
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 183
	.  error


state 150
	block:  '{' statements '}'.    (25)

	.  reduce 25 (src line 160)


state 151
	statements:  statements statement.    (27)

	.  reduce 27 (src line 165)


state 152
	statement:  expr_statement eol.    (29)

	.  reduce 29 (src line 169)


state 153
	statement:  assign_statement eol.    (30)

	.  reduce 30 (src line 170)


state 154
	statement:  define_var_statement eol.    (31)

	.  reduce 31 (src line 171)


state 155
	statement:  return_statement eol.    (32)

	.  reduce 32 (src line 172)


state 156
	statement:  function_call_statement eol.    (33)

	.  reduce 33 (src line 173)


state 157
	statement:  if_statement eol.    (34)

	.  reduce 34 (src line 174)


state 158
	statement:  for_statement eol.    (35)

	.  reduce 35 (src line 175)


state 159
	statement:  break_statement eol.    (36)

	.  reduce 36 (src line 176)


state 160
	statement:  continue_statement eol.    (37)

	.  reduce 37 (src line 177)


state 161
	statement:  switch_statement eol.    (38)

	.  reduce 38 (src line 178)


state 162
	statement:  fallthrough_statement eol.    (39)

	.  reduce 39 (src line 179)


state 163
	statement:  dump_statement eol.    (40)

	.  reduce 40 (src line 180)


state 164
	return_statement:  RETURN expr.    (45)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 45 (src line 193)


state 165
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	'{'  shift 92
	.  error

	block  goto 184

state 166
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 185
	.  error


state 167
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	'{'  shift 92
	.  error

	block  goto 186

state 168
	for_init:  assign.    (50)

	.  reduce 50 (src line 203)


state 169
	for_init:  define_var.    (51)

	.  reduce 51 (src line 205)


state 170
	switch_statement:  SWITCH expr.'{' eols cases '}' 
	switch_statement:  SWITCH expr.'{' eols cases default_statement '}' 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	'{'  shift 187
	.  error


state 171
	dump_statement:  DUMP '('.STRING_LITERAL ')' 

	STRING_LITERAL  shift 188
	.  error


state 172
	assign:  value assign_op.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 189
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 173
	assign_op:  ASSIGN.    (69)

	.  reduce 69 (src line 250)


state 174
	assign_op:  P_EQ.    (70)

	.  reduce 70 (src line 252)


state 175
	assign_op:  M_EQ.    (71)

	.  reduce 71 (src line 253)


state 176
	assign_op:  A_EQ.    (72)

	.  reduce 72 (src line 254)


state 177
	assign_op:  S_EQ.    (73)

	.  reduce 73 (src line 255)


state 178
	assign_op:  MOD_EQ.    (74)

	.  reduce 74 (src line 256)


state 179
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 
	define_var:  VAR IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	ASSIGN  shift 191
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 192
	.  error

	var_type  goto 190

state 180
	define_var:  IDENTIFIER DECL_ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 193
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 181
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (110)

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 110 (src line 306)


state 182
	value:  IDENTIFIER '[' expr ']' '.'.value 

	IDENTIFIER  shift 112
	.  error

	value  goto 194

state 183
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (108)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 108 (src line 303)

	expr  goto 109
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44
	args  goto 195

state 184
	if_statement:  IF expr block.    (47)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 196
	.  reduce 47 (src line 198)


state 185
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 197
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 186
	for_statement:  FOR expr block.    (55)

	.  reduce 55 (src line 213)


state 187
	switch_statement:  SWITCH expr '{'.eols cases '}' 
	switch_statement:  SWITCH expr '{'.eols cases default_statement '}' 

	EOL  shift 9
	.  error

	eol  goto 199
	eols  goto 198

state 188
	dump_statement:  DUMP '(' STRING_LITERAL.')' 

	')'  shift 200
	.  error


state 189
	assign:  value assign_op expr.    (75)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 75 (src line 258)


state 190
	define_var:  VAR IDENTIFIER var_type.    (76)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 201
	.  reduce 76 (src line 261)


state 191
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 202
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 192
	define_var:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 203
	.  error


state 193
	define_var:  IDENTIFIER DECL_ASSIGN expr.    (79)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 79 (src line 265)


state 194
	value:  IDENTIFIER '[' expr ']' '.' value.    (107)

	.  reduce 107 (src line 301)


state 195
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 204
	','  shift 147
	.  error


state 196
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 134
	'{'  shift 92
	.  error

	block  goto 205
	if_statement  goto 206

state 197
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	';'  shift 207
	.  error


state 198
	switch_statement:  SWITCH expr '{' eols.cases '}' 
	switch_statement:  SWITCH expr '{' eols.cases default_statement '}' 
	eols:  eols.eol 

	CASE  shift 211
	EOL  shift 9
	.  error

	case_statement  goto 210
	cases  goto 208
	eol  goto 209

state 199
	eols:  eol.    (60)

	.  reduce 60 (src line 225)


state 200
	dump_statement:  DUMP '(' STRING_LITERAL ')'.    (67)

	.  reduce 67 (src line 242)


state 201
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 212
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 202
	define_var:  VAR IDENTIFIER ASSIGN expr.    (78)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 78 (src line 264)


state 203
	define_var:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 213
	.  error


state 204
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (103)

	.  reduce 103 (src line 295)


state 205
	if_statement:  IF expr block ELSE block.    (48)

	.  reduce 48 (src line 200)


state 206
	if_statement:  IF expr block ELSE if_statement.    (49)

	.  reduce 49 (src line 201)


state 207
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 141
	const  goto 42
	function_call  goto 46
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	for_iterator  goto 214
	expr_statement  goto 216
	assign_statement  goto 215

state 208
	switch_statement:  SWITCH expr '{' eols cases.'}' 
	switch_statement:  SWITCH expr '{' eols cases.default_statement '}' 
	cases:  cases.case_statement 

	CASE  shift 211
	DEFAULT  shift 220
	'}'  shift 217
	.  error

	case_statement  goto 219
	default_statement  goto 218

state 209
	eols:  eols eol.    (61)

	.  reduce 61 (src line 227)


state 210
	cases:  case_statement.    (62)

	.  reduce 62 (src line 229)


state 211
	case_statement:  CASE.expr ':' statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 221
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 212
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (77)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	.  reduce 77 (src line 263)


state 213
	define_var:  VAR IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 222

state 214
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 92
	.  error

	block  goto 223

state 215
	for_iterator:  assign_statement.    (52)

	.  reduce 52 (src line 207)


state 216
	for_iterator:  expr_statement.    (53)

	.  reduce 53 (src line 209)


state 217
	switch_statement:  SWITCH expr '{' eols cases '}'.    (58)

	.  reduce 58 (src line 221)


state 218
	switch_statement:  SWITCH expr '{' eols cases default_statement.'}' 

	'}'  shift 224
	.  error


state 219
	cases:  cases case_statement.    (63)

	.  reduce 63 (src line 231)


state 220
	default_statement:  DEFAULT.':' statements 

	':'  shift 225
	.  error


state 221
	case_statement:  CASE expr.':' statements 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 66
	MINUS  shift 67
	ASTARISK  shift 68
	SLASH  shift 69
	PERCENT  shift 70
	EQ  shift 71
	NEQ  shift 72
	GT  shift 73
	GE  shift 74
	LT  shift 75
	LE  shift 76
	AND  shift 77
	OR  shift 78
	INCR  shift 79
	DECR  shift 80
	':'  shift 226
	.  error


state 222
	define_var:  VAR IDENTIFIER '[' INUM ']' var_type.    (80)

	.  reduce 80 (src line 266)


state 223
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (54)

	.  reduce 54 (src line 211)


state 224
	switch_statement:  SWITCH expr '{' eols cases default_statement '}'.    (59)

	.  reduce 59 (src line 223)


state 225
	default_statement:  DEFAULT ':'.statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statements  goto 227
	statement  goto 115
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

state 226
	case_statement:  CASE expr ':'.statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statements  goto 228
	statement  goto 115
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

state 227
	statements:  statements.statement 
	default_statement:  DEFAULT ':' statements.    (65)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	.  reduce 65 (src line 236)

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statement  goto 151
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

state 228
	statements:  statements.statement 
	case_statement:  CASE expr ':' statements.    (64)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 144
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 143
	IF  shift 134
	SWITCH  shift 138
	FALLTHROUGH  shift 139
	FOR  shift 135
	BREAK  shift 136
	CONTINUE  shift 137
	RETURN  shift 132
	SYSCALL  shift 52
	DUMP  shift 140
	EOL  shift 9
	'('  shift 47
	.  reduce 64 (src line 233)

	expr  goto 141
	const  goto 42
	define_var  goto 131
	function_call  goto 133
	uni_expr  goto 129
	assign  goto 130
	value  goto 142
	statement  goto 151
	expr_statement  goto 117
	assign_statement  goto 118
	define_var_statement  goto 119
	return_statement  goto 120
	function_call_statement  goto 121
	if_statement  goto 122
	for_statement  goto 123
	break_statement  goto 124
	continue_statement  goto 125
	switch_statement  goto 126
	fallthrough_statement  goto 127
	dump_statement  goto 128
	eol  goto 116

62 terminals, 45 nonterminals
125 grammar rules, 229/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
94 working sets used
memory: parser 386/240000
106 extra closures
802 shift entries, 40 exceptions
146 goto entries
217 entries saved by goto default
Optimizer space used: output 526/240000
526 table entries, 69 zero
maximum spread: 61, maximum offset: 228
