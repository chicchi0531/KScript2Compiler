
state 0
	$accept: .program $end 

	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	define_or_state  goto 10
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 95)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 99)


state 4
	define_or_state:  function_define.eol 

	EOL  shift 7
	.  error

	eol  goto 11

state 5
	define_or_state:  global_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 12

state 6
	define_or_state:  function_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 13

state 7
	eol:  EOL.    (103)

	.  reduce 103 (src line 282)


state 8
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 14
	.  error


state 9
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 

	IDENTIFIER  shift 15
	.  error


state 10
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 97)


state 11
	define_or_state:  function_define eol.    (4)

	.  reduce 4 (src line 101)


state 12
	define_or_state:  global_decl eol.    (5)

	.  reduce 5 (src line 102)


state 13
	define_or_state:  function_decl eol.    (6)

	.  reduce 6 (src line 103)


state 14
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 16
	.  error


state 15
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 

	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 17

state 16
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (11)

	IDENTIFIER  shift 23
	.  reduce 11 (src line 115)

	arg_decl  goto 22
	arg_list  goto 21

state 17
	global_decl:  VAR IDENTIFIER var_type.    (7)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 24
	.  reduce 7 (src line 105)


state 18
	var_type:  INT.    (95)

	.  reduce 95 (src line 270)


state 19
	var_type:  FLOAT.    (96)

	.  reduce 96 (src line 272)


state 20
	var_type:  STRING.    (97)

	.  reduce 97 (src line 273)


state 21
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 25
	','  shift 26
	.  error


state 22
	arg_list:  arg_decl.    (12)

	.  reduce 12 (src line 117)


state 23
	arg_decl:  IDENTIFIER.var_type 

	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 27

state 24
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 28
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 25
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (98)

	INT  shift 40
	FLOAT  shift 41
	STRING  shift 42
	VOID  shift 43
	.  reduce 98 (src line 275)

	function_type  goto 39

state 26
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 23
	.  error

	arg_decl  goto 44

state 27
	arg_decl:  IDENTIFIER var_type.    (14)

	.  reduce 14 (src line 120)


state 28
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (8)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 8 (src line 107)


state 29
	expr:  const.    (66)

	.  reduce 66 (src line 231)


state 30
	expr:  MINUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 60
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 31
	expr:  IDENTIFIER.    (68)
	function_call:  IDENTIFIER.'(' args ')' 

	'('  shift 61
	.  reduce 68 (src line 234)


state 32
	expr:  uni_expr.    (69)

	.  reduce 69 (src line 235)


state 33
	expr:  function_call.    (70)

	.  reduce 70 (src line 236)


state 34
	expr:  '('.expr ')' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 62
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 35
	const:  STRING_LITERAL.    (92)

	.  reduce 92 (src line 265)


state 36
	const:  INUM.    (93)

	.  reduce 93 (src line 267)


state 37
	const:  FNUM.    (94)

	.  reduce 94 (src line 268)


state 38
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 63
	.  error


state 39
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (9)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 65
	.  reduce 9 (src line 109)

	block  goto 64

state 40
	function_type:  INT.    (99)

	.  reduce 99 (src line 277)


state 41
	function_type:  FLOAT.    (100)

	.  reduce 100 (src line 278)


state 42
	function_type:  STRING.    (101)

	.  reduce 101 (src line 279)


state 43
	function_type:  VOID.    (102)

	.  reduce 102 (src line 280)


state 44
	arg_list:  arg_list ',' arg_decl.    (13)

	.  reduce 13 (src line 118)


state 45
	expr:  expr PLUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 66
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 46
	expr:  expr MINUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 67
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 47
	expr:  expr ASTARISK.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 68
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 48
	expr:  expr SLASH.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 69
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 49
	expr:  expr PERCENT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 70
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 50
	expr:  expr EQ.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 71
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 51
	expr:  expr NEQ.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 72
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 52
	expr:  expr GT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 73
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 53
	expr:  expr GE.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 74
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 54
	expr:  expr LT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 75
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 55
	expr:  expr LE.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 76
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 56
	expr:  expr AND.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 77
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 57
	expr:  expr OR.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 78
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 58
	uni_expr:  expr INCR.    (85)

	.  reduce 85 (src line 252)


state 59
	uni_expr:  expr DECR.    (86)

	.  reduce 86 (src line 254)


state 60
	expr:  MINUS expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 67 (src line 233)


state 61
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (89)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 89 (src line 260)

	expr  goto 80
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32
	args  goto 79

state 62
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	')'  shift 81
	.  error


state 63
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 82
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 64
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (10)

	.  reduce 10 (src line 112)


state 65
	block:  '{'.statements '}' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  error

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statements  goto 83
	statement  goto 84
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

state 66
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (71)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	INCR  shift 58
	DECR  shift 59
	.  reduce 71 (src line 237)


state 67
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (72)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	INCR  shift 58
	DECR  shift 59
	.  reduce 72 (src line 238)


state 68
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (73)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 73 (src line 239)


state 69
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (74)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 74 (src line 240)


state 70
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (75)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 75 (src line 241)


state 71
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (76)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 76 (src line 242)


state 72
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (77)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 77 (src line 243)


state 73
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (78)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 78 (src line 244)


state 74
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (79)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 79 (src line 245)


state 75
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (80)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 80 (src line 246)


state 76
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (81)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 81 (src line 247)


state 77
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (82)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	INCR  shift 58
	DECR  shift 59
	.  reduce 82 (src line 248)


state 78
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (83)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	INCR  shift 58
	DECR  shift 59
	.  reduce 83 (src line 249)


state 79
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 111
	','  shift 112
	.  error


state 80
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (90)

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 90 (src line 262)


state 81
	expr:  '(' expr ')'.    (84)

	.  reduce 84 (src line 250)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	']'  shift 113
	.  error


state 83
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	'}'  shift 114
	.  error

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statement  goto 115
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

state 84
	statements:  statement.    (16)

	.  reduce 16 (src line 129)


state 85
	statement:  eol.    (18)

	.  reduce 18 (src line 133)


state 86
	statement:  expr_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 116

state 87
	statement:  assign_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 117

state 88
	statement:  define_var_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 118

state 89
	statement:  return_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 119

state 90
	statement:  function_call_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 120

state 91
	statement:  if_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 121

state 92
	statement:  for_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 122

state 93
	statement:  break_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 123

state 94
	statement:  continue_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 124

state 95
	statement:  switch_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 125

state 96
	statement:  fallthrough_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 126

state 97
	expr_statement:  uni_expr.    (30)
	expr:  uni_expr.    (69)

	EOL  reduce 30 (src line 147)
	'{'  reduce 30 (src line 147)
	.  reduce 69 (src line 235)


state 98
	assign_statement:  assign.    (31)

	.  reduce 31 (src line 150)


state 99
	define_var_statement:  define_var.    (32)

	.  reduce 32 (src line 153)


state 100
	return_statement:  RETURN.    (33)
	return_statement:  RETURN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 33 (src line 156)

	expr  goto 127
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 101
	function_call_statement:  function_call.    (35)
	expr:  function_call.    (70)

	EOL  reduce 35 (src line 160)
	.  reduce 70 (src line 236)


state 102
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 128
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 103
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 130
	const  goto 29
	define_var  goto 132
	function_call  goto 33
	uni_expr  goto 32
	assign  goto 131
	for_init  goto 129

state 104
	break_statement:  BREAK.    (45)

	.  reduce 45 (src line 180)


state 105
	continue_statement:  CONTINUE.    (46)

	.  reduce 46 (src line 183)


state 106
	switch_statement:  SWITCH.expr '{' eols cases '}' 
	switch_statement:  SWITCH.expr '{' eols cases default_statement '}' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 133
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 107
	fallthrough_statement:  FALLTHROUGH.    (55)

	.  reduce 55 (src line 204)


state 108
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  error


state 109
	assign:  IDENTIFIER.assign_op expr 
	expr:  IDENTIFIER.    (68)
	function_call:  IDENTIFIER.'(' args ')' 

	P_EQ  shift 136
	M_EQ  shift 137
	A_EQ  shift 138
	S_EQ  shift 139
	MOD_EQ  shift 140
	ASSIGN  shift 135
	'('  shift 61
	.  reduce 68 (src line 234)

	assign_op  goto 134

state 110
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 

	IDENTIFIER  shift 141
	.  error


state 111
	function_call:  IDENTIFIER '(' args ')'.    (87)

	.  reduce 87 (src line 256)


state 112
	args:  args ','.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 142
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 113
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 143
	.  error


state 114
	block:  '{' statements '}'.    (15)

	.  reduce 15 (src line 126)


state 115
	statements:  statements statement.    (17)

	.  reduce 17 (src line 131)


state 116
	statement:  expr_statement eol.    (19)

	.  reduce 19 (src line 135)


state 117
	statement:  assign_statement eol.    (20)

	.  reduce 20 (src line 136)


state 118
	statement:  define_var_statement eol.    (21)

	.  reduce 21 (src line 137)


state 119
	statement:  return_statement eol.    (22)

	.  reduce 22 (src line 138)


state 120
	statement:  function_call_statement eol.    (23)

	.  reduce 23 (src line 139)


state 121
	statement:  if_statement eol.    (24)

	.  reduce 24 (src line 140)


state 122
	statement:  for_statement eol.    (25)

	.  reduce 25 (src line 141)


state 123
	statement:  break_statement eol.    (26)

	.  reduce 26 (src line 142)


state 124
	statement:  continue_statement eol.    (27)

	.  reduce 27 (src line 143)


state 125
	statement:  switch_statement eol.    (28)

	.  reduce 28 (src line 144)


state 126
	statement:  fallthrough_statement eol.    (29)

	.  reduce 29 (src line 145)


state 127
	return_statement:  RETURN expr.    (34)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 34 (src line 158)


state 128
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	'{'  shift 65
	.  error

	block  goto 144

state 129
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 145
	.  error


state 130
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	'{'  shift 65
	.  error

	block  goto 146

state 131
	for_init:  assign.    (39)

	.  reduce 39 (src line 168)


state 132
	for_init:  define_var.    (40)

	.  reduce 40 (src line 170)


state 133
	switch_statement:  SWITCH expr.'{' eols cases '}' 
	switch_statement:  SWITCH expr.'{' eols cases default_statement '}' 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	'{'  shift 147
	.  error


state 134
	assign:  IDENTIFIER assign_op.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 148
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 135
	assign_op:  ASSIGN.    (56)

	.  reduce 56 (src line 211)


state 136
	assign_op:  P_EQ.    (57)

	.  reduce 57 (src line 213)


state 137
	assign_op:  M_EQ.    (58)

	.  reduce 58 (src line 214)


state 138
	assign_op:  A_EQ.    (59)

	.  reduce 59 (src line 215)


state 139
	assign_op:  S_EQ.    (60)

	.  reduce 60 (src line 216)


state 140
	assign_op:  MOD_EQ.    (61)

	.  reduce 61 (src line 217)


state 141
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 

	ASSIGN  shift 150
	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 149

state 142
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (91)

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 91 (src line 263)


state 143
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (89)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 89 (src line 260)

	expr  goto 80
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32
	args  goto 151

state 144
	if_statement:  IF expr block.    (36)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 152
	.  reduce 36 (src line 163)


state 145
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 153
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 146
	for_statement:  FOR expr block.    (44)

	.  reduce 44 (src line 178)


state 147
	switch_statement:  SWITCH expr '{'.eols cases '}' 
	switch_statement:  SWITCH expr '{'.eols cases default_statement '}' 

	EOL  shift 7
	.  error

	eol  goto 155
	eols  goto 154

state 148
	assign:  IDENTIFIER assign_op expr.    (62)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 62 (src line 219)


state 149
	define_var:  VAR IDENTIFIER var_type.    (63)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 156
	.  reduce 63 (src line 226)


state 150
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 157
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 151
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 158
	','  shift 112
	.  error


state 152
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 102
	'{'  shift 65
	.  error

	block  goto 159
	if_statement  goto 160

state 153
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	';'  shift 161
	.  error


state 154
	switch_statement:  SWITCH expr '{' eols.cases '}' 
	switch_statement:  SWITCH expr '{' eols.cases default_statement '}' 
	eols:  eols.eol 

	CASE  shift 165
	EOL  shift 7
	.  error

	case_statement  goto 164
	cases  goto 162
	eol  goto 163

state 155
	eols:  eol.    (49)

	.  reduce 49 (src line 190)


state 156
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 166
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 157
	define_var:  VAR IDENTIFIER ASSIGN expr.    (65)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 65 (src line 229)


state 158
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (88)

	.  reduce 88 (src line 258)


state 159
	if_statement:  IF expr block ELSE block.    (37)

	.  reduce 37 (src line 165)


state 160
	if_statement:  IF expr block ELSE if_statement.    (38)

	.  reduce 38 (src line 166)


state 161
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 108
	const  goto 29
	function_call  goto 33
	uni_expr  goto 97
	assign  goto 98
	for_iterator  goto 167
	expr_statement  goto 169
	assign_statement  goto 168

state 162
	switch_statement:  SWITCH expr '{' eols cases.'}' 
	switch_statement:  SWITCH expr '{' eols cases.default_statement '}' 
	cases:  cases.case_statement 

	CASE  shift 165
	DEFAULT  shift 173
	'}'  shift 170
	.  error

	case_statement  goto 172
	default_statement  goto 171

state 163
	eols:  eols eol.    (50)

	.  reduce 50 (src line 192)


state 164
	cases:  case_statement.    (51)

	.  reduce 51 (src line 194)


state 165
	case_statement:  CASE.expr ':' statements 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 174
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 166
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (64)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 64 (src line 228)


state 167
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 65
	.  error

	block  goto 175

state 168
	for_iterator:  assign_statement.    (41)

	.  reduce 41 (src line 172)


state 169
	for_iterator:  expr_statement.    (42)

	.  reduce 42 (src line 174)


state 170
	switch_statement:  SWITCH expr '{' eols cases '}'.    (47)

	.  reduce 47 (src line 186)


state 171
	switch_statement:  SWITCH expr '{' eols cases default_statement.'}' 

	'}'  shift 176
	.  error


state 172
	cases:  cases case_statement.    (52)

	.  reduce 52 (src line 196)


state 173
	default_statement:  DEFAULT.':' statements 

	':'  shift 177
	.  error


state 174
	case_statement:  CASE expr.':' statements 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	':'  shift 178
	.  error


state 175
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (43)

	.  reduce 43 (src line 176)


state 176
	switch_statement:  SWITCH expr '{' eols cases default_statement '}'.    (48)

	.  reduce 48 (src line 188)


state 177
	default_statement:  DEFAULT ':'.statements 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  error

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statements  goto 179
	statement  goto 84
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

state 178
	case_statement:  CASE expr ':'.statements 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  error

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statements  goto 180
	statement  goto 84
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

state 179
	statements:  statements.statement 
	default_statement:  DEFAULT ':' statements.    (54)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  reduce 54 (src line 201)

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statement  goto 115
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

state 180
	statements:  statements.statement 
	case_statement:  CASE expr ':' statements.    (53)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 109
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 110
	IF  shift 102
	SWITCH  shift 106
	FALLTHROUGH  shift 107
	FOR  shift 103
	BREAK  shift 104
	CONTINUE  shift 105
	RETURN  shift 100
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  reduce 53 (src line 198)

	expr  goto 108
	const  goto 29
	define_var  goto 99
	function_call  goto 101
	uni_expr  goto 97
	assign  goto 98
	statement  goto 115
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	break_statement  goto 93
	continue_statement  goto 94
	switch_statement  goto 95
	fallthrough_statement  goto 96
	eol  goto 85

60 terminals, 39 nonterminals
104 grammar rules, 181/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
88 working sets used
memory: parser 296/240000
88 extra closures
697 shift entries, 40 exceptions
118 goto entries
174 entries saved by goto default
Optimizer space used: output 489/240000
489 table entries, 114 zero
maximum spread: 58, maximum offset: 180
