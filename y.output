
state 0
	$accept: .program $end 

	VAR  shift 12
	FUNC  shift 11
	IMPORT  shift 10
	TYPE  shift 13
	EOL  shift 9
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7
	type_decl  goto 8

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 12
	FUNC  shift 11
	IMPORT  shift 10
	TYPE  shift 13
	EOL  shift 9
	.  error

	define_or_state  goto 14
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7
	type_decl  goto 8

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 106)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 110)


state 4
	define_or_state:  import.    (4)

	.  reduce 4 (src line 112)


state 5
	define_or_state:  function_define.eol 

	EOL  shift 9
	.  error

	eol  goto 15

state 6
	define_or_state:  global_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 16

state 7
	define_or_state:  function_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 17

state 8
	define_or_state:  type_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 18

state 9
	eol:  EOL.    (121)

	.  reduce 121 (src line 325)


state 10
	import:  IMPORT.STRING_LITERAL 

	STRING_LITERAL  shift 19
	.  error


state 11
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 20
	.  error


state 12
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 
	global_decl:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 21
	.  error


state 13
	type_decl:  TYPE.IDENTIFIER STRUCT '{' member_list '}' 

	IDENTIFIER  shift 22
	.  error


state 14
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 108)


state 15
	define_or_state:  function_define eol.    (5)

	.  reduce 5 (src line 113)


state 16
	define_or_state:  global_decl eol.    (6)

	.  reduce 6 (src line 114)


state 17
	define_or_state:  function_decl eol.    (7)

	.  reduce 7 (src line 115)


state 18
	define_or_state:  type_decl eol.    (8)

	.  reduce 8 (src line 116)


state 19
	import:  IMPORT STRING_LITERAL.    (9)

	.  reduce 9 (src line 118)


state 20
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 23
	.  error


state 21
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 
	global_decl:  VAR IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 25
	.  error

	var_type  goto 24

state 22
	type_decl:  TYPE IDENTIFIER.STRUCT '{' member_list '}' 

	STRUCT  shift 30
	.  error


state 23
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (15)

	IDENTIFIER  shift 33
	.  reduce 15 (src line 132)

	arg_decl  goto 32
	arg_list  goto 31

state 24
	global_decl:  VAR IDENTIFIER var_type.    (10)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 34
	.  reduce 10 (src line 121)


state 25
	global_decl:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 35
	.  error


state 26
	var_type:  INT.    (114)

	.  reduce 114 (src line 314)


state 27
	var_type:  FLOAT.    (115)

	.  reduce 115 (src line 316)


state 28
	var_type:  STRING.    (116)

	.  reduce 116 (src line 317)


state 29
	var_type:  IDENTIFIER.    (117)

	.  reduce 117 (src line 318)


state 30
	type_decl:  TYPE IDENTIFIER STRUCT.'{' member_list '}' 

	'{'  shift 36
	.  error


state 31
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 37
	','  shift 38
	.  error


state 32
	arg_list:  arg_decl.    (16)

	.  reduce 16 (src line 134)


state 33
	arg_decl:  IDENTIFIER.var_type 
	arg_decl:  IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 40
	.  error

	var_type  goto 39

state 34
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 41
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 35
	global_decl:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 53
	.  error


state 36
	type_decl:  TYPE IDENTIFIER STRUCT '{'.member_list '}' 

	IDENTIFIER  shift 33
	EOL  shift 9
	.  error

	arg_decl  goto 57
	member_list  goto 54
	member  goto 55
	eol  goto 56

state 37
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (118)

	VOID  shift 60
	'['  shift 59
	.  reduce 118 (src line 320)

	function_type  goto 58

state 38
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 33
	.  error

	arg_decl  goto 61

state 39
	arg_decl:  IDENTIFIER var_type.    (18)

	.  reduce 18 (src line 137)


state 40
	arg_decl:  IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 62
	.  error


state 41
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (11)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 11 (src line 123)


state 42
	expr:  const.    (81)

	.  reduce 81 (src line 269)


state 43
	expr:  MINUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 78
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 44
	expr:  value.    (83)

	.  reduce 83 (src line 272)


state 45
	expr:  uni_expr.    (84)

	.  reduce 84 (src line 273)


state 46
	expr:  function_call.    (85)

	.  reduce 85 (src line 274)


state 47
	expr:  '('.expr ')' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 79
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 48
	const:  STRING_LITERAL.    (111)

	.  reduce 111 (src line 309)


state 49
	const:  INUM.    (112)

	.  reduce 112 (src line 311)


state 50
	const:  FNUM.    (113)

	.  reduce 113 (src line 312)


state 51
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	'('  shift 80
	'['  shift 81
	'.'  shift 82
	.  reduce 104 (src line 298)


state 52
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 83
	.  error


state 53
	global_decl:  VAR IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 84

state 54
	type_decl:  TYPE IDENTIFIER STRUCT '{' member_list.'}' 
	member_list:  member_list.member 

	IDENTIFIER  shift 33
	EOL  shift 9
	'}'  shift 85
	.  error

	arg_decl  goto 57
	member  goto 86
	eol  goto 56

state 55
	member_list:  member.    (21)

	.  reduce 21 (src line 144)


state 56
	member:  eol.    (23)

	.  reduce 23 (src line 154)


state 57
	member:  arg_decl.eol 

	EOL  shift 9
	.  error

	eol  goto 87

state 58
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (13)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 89
	.  reduce 13 (src line 126)

	block  goto 88

state 59
	function_type:  '['.INUM ']' var_type 

	INUM  shift 90
	.  error


state 60
	function_type:  VOID.    (120)

	.  reduce 120 (src line 323)


state 61
	arg_list:  arg_list ',' arg_decl.    (17)

	.  reduce 17 (src line 135)


state 62
	arg_decl:  IDENTIFIER '[' INUM.']' var_type 

	']'  shift 91
	.  error


state 63
	expr:  expr PLUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 92
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 64
	expr:  expr MINUS.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 93
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 65
	expr:  expr ASTARISK.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 94
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 66
	expr:  expr SLASH.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 95
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 67
	expr:  expr PERCENT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 96
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 68
	expr:  expr EQ.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 97
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 69
	expr:  expr NEQ.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 98
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 70
	expr:  expr GT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 99
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 71
	expr:  expr GE.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 100
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 72
	expr:  expr LT.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 101
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 73
	expr:  expr LE.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 102
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 74
	expr:  expr AND.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 103
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 75
	expr:  expr OR.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 104
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 76
	uni_expr:  expr INCR.    (100)

	.  reduce 100 (src line 290)


state 77
	uni_expr:  expr DECR.    (101)

	.  reduce 101 (src line 292)


state 78
	expr:  MINUS expr.    (82)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 82 (src line 271)


state 79
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	')'  shift 105
	.  error


state 80
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (108)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 108 (src line 304)

	expr  goto 107
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44
	args  goto 106

state 81
	value:  IDENTIFIER '['.expr ']' 
	value:  IDENTIFIER '['.expr ']' '.' value 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 108
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 82
	value:  IDENTIFIER '.'.value 

	IDENTIFIER  shift 110
	.  error

	value  goto 109

state 83
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 111
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 84
	global_decl:  VAR IDENTIFIER '[' INUM ']' var_type.    (12)

	.  reduce 12 (src line 124)


state 85
	type_decl:  TYPE IDENTIFIER STRUCT '{' member_list '}'.    (20)

	.  reduce 20 (src line 141)


state 86
	member_list:  member_list member.    (22)

	.  reduce 22 (src line 152)


state 87
	member:  arg_decl eol.    (24)

	.  reduce 24 (src line 156)


state 88
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (14)

	.  reduce 14 (src line 129)


state 89
	block:  '{'.statements '}' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statements  goto 112
	statement  goto 113
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

state 90
	function_type:  '[' INUM.']' var_type 

	']'  shift 143
	.  error


state 91
	arg_decl:  IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 144

state 92
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (86)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	INCR  shift 76
	DECR  shift 77
	.  reduce 86 (src line 275)


state 93
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (87)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	INCR  shift 76
	DECR  shift 77
	.  reduce 87 (src line 276)


state 94
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (88)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 76
	DECR  shift 77
	.  reduce 88 (src line 277)


state 95
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (89)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 76
	DECR  shift 77
	.  reduce 89 (src line 278)


state 96
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (90)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 76
	DECR  shift 77
	.  reduce 90 (src line 279)


state 97
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (91)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 91 (src line 280)


state 98
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (92)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 92 (src line 281)


state 99
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (93)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 93 (src line 282)


state 100
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (94)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 94 (src line 283)


state 101
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (95)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 95 (src line 284)


state 102
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (96)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 76
	DECR  shift 77
	.  reduce 96 (src line 285)


state 103
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (97)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	INCR  shift 76
	DECR  shift 77
	.  reduce 97 (src line 286)


state 104
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (98)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	INCR  shift 76
	DECR  shift 77
	.  reduce 98 (src line 287)


state 105
	expr:  '(' expr ')'.    (99)

	.  reduce 99 (src line 288)


state 106
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 145
	','  shift 146
	.  error


state 107
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (109)

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 109 (src line 306)


state 108
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 
	value:  IDENTIFIER '[' expr.']' '.' value 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	']'  shift 147
	.  error


state 109
	value:  IDENTIFIER '.' value.    (106)

	.  reduce 106 (src line 301)


state 110
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	'['  shift 81
	'.'  shift 82
	.  reduce 104 (src line 298)


state 111
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	']'  shift 148
	.  error


state 112
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	'}'  shift 149
	.  error

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statement  goto 150
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

state 113
	statements:  statement.    (26)

	.  reduce 26 (src line 164)


state 114
	statement:  eol.    (28)

	.  reduce 28 (src line 168)


state 115
	statement:  expr_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 151

state 116
	statement:  assign_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 152

state 117
	statement:  define_var_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 153

state 118
	statement:  return_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 154

state 119
	statement:  function_call_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 155

state 120
	statement:  if_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 156

state 121
	statement:  for_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 157

state 122
	statement:  break_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 158

state 123
	statement:  continue_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 159

state 124
	statement:  switch_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 160

state 125
	statement:  fallthrough_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 161

state 126
	statement:  dump_statement.eol 

	EOL  shift 9
	.  error

	eol  goto 162

state 127
	expr_statement:  uni_expr.    (41)
	expr:  uni_expr.    (84)

	EOL  reduce 41 (src line 183)
	'{'  reduce 41 (src line 183)
	.  reduce 84 (src line 273)


state 128
	assign_statement:  assign.    (42)

	.  reduce 42 (src line 186)


state 129
	define_var_statement:  define_var.    (43)

	.  reduce 43 (src line 189)


state 130
	return_statement:  RETURN.    (44)
	return_statement:  RETURN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 44 (src line 192)

	expr  goto 163
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 131
	function_call_statement:  function_call.    (46)
	expr:  function_call.    (85)

	EOL  reduce 46 (src line 196)
	.  reduce 85 (src line 274)


state 132
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 164
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 133
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 166
	const  goto 42
	define_var  goto 168
	function_call  goto 46
	uni_expr  goto 45
	assign  goto 167
	value  goto 140
	for_init  goto 165

state 134
	break_statement:  BREAK.    (56)

	.  reduce 56 (src line 216)


state 135
	continue_statement:  CONTINUE.    (57)

	.  reduce 57 (src line 219)


state 136
	switch_statement:  SWITCH.expr '{' eols cases '}' 
	switch_statement:  SWITCH.expr '{' eols cases default_statement '}' 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 169
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 137
	fallthrough_statement:  FALLTHROUGH.    (66)

	.  reduce 66 (src line 240)


state 138
	dump_statement:  DUMP.'(' STRING_LITERAL ')' 
	dump_statement:  DUMP.    (68)

	'('  shift 170
	.  reduce 68 (src line 245)


state 139
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  error


state 140
	assign:  value.assign_op expr 
	expr:  value.    (83)

	P_EQ  shift 173
	M_EQ  shift 174
	A_EQ  shift 175
	S_EQ  shift 176
	MOD_EQ  shift 177
	ASSIGN  shift 172
	.  reduce 83 (src line 272)

	assign_op  goto 171

state 141
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 
	define_var:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 178
	.  error


state 142
	define_var:  IDENTIFIER.DECL_ASSIGN expr 
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (104)
	value:  IDENTIFIER.'[' expr ']' 
	value:  IDENTIFIER.'.' value 
	value:  IDENTIFIER.'[' expr ']' '.' value 

	DECL_ASSIGN  shift 179
	'('  shift 80
	'['  shift 81
	'.'  shift 82
	.  reduce 104 (src line 298)


state 143
	function_type:  '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 180

state 144
	arg_decl:  IDENTIFIER '[' INUM ']' var_type.    (19)

	.  reduce 19 (src line 139)


state 145
	function_call:  IDENTIFIER '(' args ')'.    (102)

	.  reduce 102 (src line 294)


state 146
	args:  args ','.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 181
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 147
	value:  IDENTIFIER '[' expr ']'.    (105)
	value:  IDENTIFIER '[' expr ']'.'.' value 

	'.'  shift 182
	.  reduce 105 (src line 300)


state 148
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 183
	.  error


state 149
	block:  '{' statements '}'.    (25)

	.  reduce 25 (src line 161)


state 150
	statements:  statements statement.    (27)

	.  reduce 27 (src line 166)


state 151
	statement:  expr_statement eol.    (29)

	.  reduce 29 (src line 170)


state 152
	statement:  assign_statement eol.    (30)

	.  reduce 30 (src line 171)


state 153
	statement:  define_var_statement eol.    (31)

	.  reduce 31 (src line 172)


state 154
	statement:  return_statement eol.    (32)

	.  reduce 32 (src line 173)


state 155
	statement:  function_call_statement eol.    (33)

	.  reduce 33 (src line 174)


state 156
	statement:  if_statement eol.    (34)

	.  reduce 34 (src line 175)


state 157
	statement:  for_statement eol.    (35)

	.  reduce 35 (src line 176)


state 158
	statement:  break_statement eol.    (36)

	.  reduce 36 (src line 177)


state 159
	statement:  continue_statement eol.    (37)

	.  reduce 37 (src line 178)


state 160
	statement:  switch_statement eol.    (38)

	.  reduce 38 (src line 179)


state 161
	statement:  fallthrough_statement eol.    (39)

	.  reduce 39 (src line 180)


state 162
	statement:  dump_statement eol.    (40)

	.  reduce 40 (src line 181)


state 163
	return_statement:  RETURN expr.    (45)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 45 (src line 194)


state 164
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	'{'  shift 89
	.  error

	block  goto 184

state 165
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 185
	.  error


state 166
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	'{'  shift 89
	.  error

	block  goto 186

state 167
	for_init:  assign.    (50)

	.  reduce 50 (src line 204)


state 168
	for_init:  define_var.    (51)

	.  reduce 51 (src line 206)


state 169
	switch_statement:  SWITCH expr.'{' eols cases '}' 
	switch_statement:  SWITCH expr.'{' eols cases default_statement '}' 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	'{'  shift 187
	.  error


state 170
	dump_statement:  DUMP '('.STRING_LITERAL ')' 

	STRING_LITERAL  shift 188
	.  error


state 171
	assign:  value assign_op.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 189
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 172
	assign_op:  ASSIGN.    (69)

	.  reduce 69 (src line 251)


state 173
	assign_op:  P_EQ.    (70)

	.  reduce 70 (src line 253)


state 174
	assign_op:  M_EQ.    (71)

	.  reduce 71 (src line 254)


state 175
	assign_op:  A_EQ.    (72)

	.  reduce 72 (src line 255)


state 176
	assign_op:  S_EQ.    (73)

	.  reduce 73 (src line 256)


state 177
	assign_op:  MOD_EQ.    (74)

	.  reduce 74 (src line 257)


state 178
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 
	define_var:  VAR IDENTIFIER.'[' INUM ']' var_type 

	IDENTIFIER  shift 29
	ASSIGN  shift 191
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	'['  shift 192
	.  error

	var_type  goto 190

state 179
	define_var:  IDENTIFIER DECL_ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 193
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 180
	function_type:  '[' INUM ']' var_type.    (119)

	.  reduce 119 (src line 322)


state 181
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (110)

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 110 (src line 307)


state 182
	value:  IDENTIFIER '[' expr ']' '.'.value 

	IDENTIFIER  shift 110
	.  error

	value  goto 194

state 183
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (108)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  reduce 108 (src line 304)

	expr  goto 107
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44
	args  goto 195

state 184
	if_statement:  IF expr block.    (47)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 196
	.  reduce 47 (src line 199)


state 185
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 197
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 186
	for_statement:  FOR expr block.    (55)

	.  reduce 55 (src line 214)


state 187
	switch_statement:  SWITCH expr '{'.eols cases '}' 
	switch_statement:  SWITCH expr '{'.eols cases default_statement '}' 

	EOL  shift 9
	.  error

	eol  goto 199
	eols  goto 198

state 188
	dump_statement:  DUMP '(' STRING_LITERAL.')' 

	')'  shift 200
	.  error


state 189
	assign:  value assign_op expr.    (75)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 75 (src line 259)


state 190
	define_var:  VAR IDENTIFIER var_type.    (76)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 201
	.  reduce 76 (src line 262)


state 191
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 202
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 192
	define_var:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 203
	.  error


state 193
	define_var:  IDENTIFIER DECL_ASSIGN expr.    (79)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 79 (src line 266)


state 194
	value:  IDENTIFIER '[' expr ']' '.' value.    (107)

	.  reduce 107 (src line 302)


state 195
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 204
	','  shift 146
	.  error


state 196
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 132
	'{'  shift 89
	.  error

	block  goto 205
	if_statement  goto 206

state 197
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	';'  shift 207
	.  error


state 198
	switch_statement:  SWITCH expr '{' eols.cases '}' 
	switch_statement:  SWITCH expr '{' eols.cases default_statement '}' 
	eols:  eols.eol 

	CASE  shift 211
	EOL  shift 9
	.  error

	case_statement  goto 210
	cases  goto 208
	eol  goto 209

state 199
	eols:  eol.    (60)

	.  reduce 60 (src line 226)


state 200
	dump_statement:  DUMP '(' STRING_LITERAL ')'.    (67)

	.  reduce 67 (src line 243)


state 201
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 212
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 202
	define_var:  VAR IDENTIFIER ASSIGN expr.    (78)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 78 (src line 265)


state 203
	define_var:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 213
	.  error


state 204
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (103)

	.  reduce 103 (src line 296)


state 205
	if_statement:  IF expr block ELSE block.    (48)

	.  reduce 48 (src line 201)


state 206
	if_statement:  IF expr block ELSE if_statement.    (49)

	.  reduce 49 (src line 202)


state 207
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 139
	const  goto 42
	function_call  goto 46
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	for_iterator  goto 214
	expr_statement  goto 216
	assign_statement  goto 215

state 208
	switch_statement:  SWITCH expr '{' eols cases.'}' 
	switch_statement:  SWITCH expr '{' eols cases.default_statement '}' 
	cases:  cases.case_statement 

	CASE  shift 211
	DEFAULT  shift 220
	'}'  shift 217
	.  error

	case_statement  goto 219
	default_statement  goto 218

state 209
	eols:  eols eol.    (61)

	.  reduce 61 (src line 228)


state 210
	cases:  case_statement.    (62)

	.  reduce 62 (src line 230)


state 211
	case_statement:  CASE.expr ':' statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 51
	STRING_LITERAL  shift 48
	MINUS  shift 43
	SYSCALL  shift 52
	'('  shift 47
	.  error

	expr  goto 221
	const  goto 42
	function_call  goto 46
	uni_expr  goto 45
	value  goto 44

state 212
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (77)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	.  reduce 77 (src line 264)


state 213
	define_var:  VAR IDENTIFIER '[' INUM ']'.var_type 

	IDENTIFIER  shift 29
	INT  shift 26
	FLOAT  shift 27
	STRING  shift 28
	.  error

	var_type  goto 222

state 214
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 89
	.  error

	block  goto 223

state 215
	for_iterator:  assign_statement.    (52)

	.  reduce 52 (src line 208)


state 216
	for_iterator:  expr_statement.    (53)

	.  reduce 53 (src line 210)


state 217
	switch_statement:  SWITCH expr '{' eols cases '}'.    (58)

	.  reduce 58 (src line 222)


state 218
	switch_statement:  SWITCH expr '{' eols cases default_statement.'}' 

	'}'  shift 224
	.  error


state 219
	cases:  cases case_statement.    (63)

	.  reduce 63 (src line 232)


state 220
	default_statement:  DEFAULT.':' statements 

	':'  shift 225
	.  error


state 221
	case_statement:  CASE expr.':' statements 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 63
	MINUS  shift 64
	ASTARISK  shift 65
	SLASH  shift 66
	PERCENT  shift 67
	EQ  shift 68
	NEQ  shift 69
	GT  shift 70
	GE  shift 71
	LT  shift 72
	LE  shift 73
	AND  shift 74
	OR  shift 75
	INCR  shift 76
	DECR  shift 77
	':'  shift 226
	.  error


state 222
	define_var:  VAR IDENTIFIER '[' INUM ']' var_type.    (80)

	.  reduce 80 (src line 267)


state 223
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (54)

	.  reduce 54 (src line 212)


state 224
	switch_statement:  SWITCH expr '{' eols cases default_statement '}'.    (59)

	.  reduce 59 (src line 224)


state 225
	default_statement:  DEFAULT ':'.statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statements  goto 227
	statement  goto 113
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

state 226
	case_statement:  CASE expr ':'.statements 

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	.  error

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statements  goto 228
	statement  goto 113
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

state 227
	statements:  statements.statement 
	default_statement:  DEFAULT ':' statements.    (65)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	.  reduce 65 (src line 237)

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statement  goto 150
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

state 228
	statements:  statements.statement 
	case_statement:  CASE expr ':' statements.    (64)

	INUM  shift 49
	FNUM  shift 50
	IDENTIFIER  shift 142
	STRING_LITERAL  shift 48
	MINUS  shift 43
	VAR  shift 141
	IF  shift 132
	SWITCH  shift 136
	FALLTHROUGH  shift 137
	FOR  shift 133
	BREAK  shift 134
	CONTINUE  shift 135
	RETURN  shift 130
	SYSCALL  shift 52
	DUMP  shift 138
	EOL  shift 9
	'('  shift 47
	.  reduce 64 (src line 234)

	expr  goto 139
	const  goto 42
	define_var  goto 129
	function_call  goto 131
	uni_expr  goto 127
	assign  goto 128
	value  goto 140
	statement  goto 150
	expr_statement  goto 115
	assign_statement  goto 116
	define_var_statement  goto 117
	return_statement  goto 118
	function_call_statement  goto 119
	if_statement  goto 120
	for_statement  goto 121
	break_statement  goto 122
	continue_statement  goto 123
	switch_statement  goto 124
	fallthrough_statement  goto 125
	dump_statement  goto 126
	eol  goto 114

62 terminals, 45 nonterminals
122 grammar rules, 229/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
94 working sets used
memory: parser 386/240000
106 extra closures
805 shift entries, 40 exceptions
147 goto entries
217 entries saved by goto default
Optimizer space used: output 575/240000
575 table entries, 118 zero
maximum spread: 61, maximum offset: 228
