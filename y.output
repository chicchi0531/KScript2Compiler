
state 0
	$accept: .program $end 

	VAR  shift 11
	FUNC  shift 10
	IMPORT  shift 9
	EOL  shift 8
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 11
	FUNC  shift 10
	IMPORT  shift 9
	EOL  shift 8
	.  error

	define_or_state  goto 12
	eol  goto 3
	import  goto 4
	function_define  goto 5
	global_decl  goto 6
	function_decl  goto 7

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 94)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 98)


state 4
	define_or_state:  import.    (4)

	.  reduce 4 (src line 100)


state 5
	define_or_state:  function_define.eol 

	EOL  shift 8
	.  error

	eol  goto 13

state 6
	define_or_state:  global_decl.eol 

	EOL  shift 8
	.  error

	eol  goto 14

state 7
	define_or_state:  function_decl.eol 

	EOL  shift 8
	.  error

	eol  goto 15

state 8
	eol:  EOL.    (112)

	.  reduce 112 (src line 298)


state 9
	import:  IMPORT.STRING_LITERAL 

	STRING_LITERAL  shift 16
	.  error


state 10
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 17
	.  error


state 11
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 
	global_decl:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 18
	.  error


state 12
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 96)


state 13
	define_or_state:  function_define eol.    (5)

	.  reduce 5 (src line 101)


state 14
	define_or_state:  global_decl eol.    (6)

	.  reduce 6 (src line 102)


state 15
	define_or_state:  function_decl eol.    (7)

	.  reduce 7 (src line 103)


state 16
	import:  IMPORT STRING_LITERAL.    (8)

	.  reduce 8 (src line 105)


state 17
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 19
	.  error


state 18
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 
	global_decl:  VAR IDENTIFIER.'[' INUM ']' var_type 

	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	'['  shift 21
	.  error

	var_type  goto 20

state 19
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (14)

	IDENTIFIER  shift 27
	.  reduce 14 (src line 119)

	arg_decl  goto 26
	arg_list  goto 25

state 20
	global_decl:  VAR IDENTIFIER var_type.    (9)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 28
	.  reduce 9 (src line 108)


state 21
	global_decl:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 29
	.  error


state 22
	var_type:  INT.    (104)

	.  reduce 104 (src line 286)


state 23
	var_type:  FLOAT.    (105)

	.  reduce 105 (src line 288)


state 24
	var_type:  STRING.    (106)

	.  reduce 106 (src line 289)


state 25
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 30
	','  shift 31
	.  error


state 26
	arg_list:  arg_decl.    (15)

	.  reduce 15 (src line 121)


state 27
	arg_decl:  IDENTIFIER.var_type 
	arg_decl:  IDENTIFIER.'[' INUM ']' var_type 

	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	'['  shift 33
	.  error

	var_type  goto 32

state 28
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 34
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 29
	global_decl:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 46
	.  error


state 30
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (107)

	INT  shift 48
	FLOAT  shift 49
	STRING  shift 50
	VOID  shift 51
	.  reduce 107 (src line 291)

	function_type  goto 47

state 31
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 27
	.  error

	arg_decl  goto 52

state 32
	arg_decl:  IDENTIFIER var_type.    (17)

	.  reduce 17 (src line 124)


state 33
	arg_decl:  IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 53
	.  error


state 34
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (10)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 10 (src line 110)


state 35
	expr:  const.    (73)

	.  reduce 73 (src line 243)


state 36
	expr:  MINUS.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 69
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 37
	expr:  value.    (75)

	.  reduce 75 (src line 246)


state 38
	expr:  uni_expr.    (76)

	.  reduce 76 (src line 247)


state 39
	expr:  function_call.    (77)

	.  reduce 77 (src line 248)


state 40
	expr:  '('.expr ')' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 70
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 41
	const:  STRING_LITERAL.    (101)

	.  reduce 101 (src line 281)


state 42
	const:  INUM.    (102)

	.  reduce 102 (src line 283)


state 43
	const:  FNUM.    (103)

	.  reduce 103 (src line 284)


state 44
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (96)
	value:  IDENTIFIER.'[' expr ']' 

	'('  shift 71
	'['  shift 72
	.  reduce 96 (src line 272)


state 45
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 73
	.  error


state 46
	global_decl:  VAR IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	.  error

	var_type  goto 74

state 47
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (12)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 76
	.  reduce 12 (src line 113)

	block  goto 75

state 48
	function_type:  INT.    (108)

	.  reduce 108 (src line 293)


state 49
	function_type:  FLOAT.    (109)

	.  reduce 109 (src line 294)


state 50
	function_type:  STRING.    (110)

	.  reduce 110 (src line 295)


state 51
	function_type:  VOID.    (111)

	.  reduce 111 (src line 296)


state 52
	arg_list:  arg_list ',' arg_decl.    (16)

	.  reduce 16 (src line 122)


state 53
	arg_decl:  IDENTIFIER '[' INUM.']' var_type 

	']'  shift 77
	.  error


state 54
	expr:  expr PLUS.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 78
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 55
	expr:  expr MINUS.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 79
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 56
	expr:  expr ASTARISK.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 80
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 57
	expr:  expr SLASH.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 81
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 58
	expr:  expr PERCENT.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 82
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 59
	expr:  expr EQ.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 83
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 60
	expr:  expr NEQ.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 84
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 61
	expr:  expr GT.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 85
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 62
	expr:  expr GE.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 86
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 63
	expr:  expr LT.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 87
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 64
	expr:  expr LE.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 88
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 65
	expr:  expr AND.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 89
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 66
	expr:  expr OR.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 90
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 67
	uni_expr:  expr INCR.    (92)

	.  reduce 92 (src line 264)


state 68
	uni_expr:  expr DECR.    (93)

	.  reduce 93 (src line 266)


state 69
	expr:  MINUS expr.    (74)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 74 (src line 245)


state 70
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	')'  shift 91
	.  error


state 71
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (98)

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  reduce 98 (src line 276)

	expr  goto 93
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37
	args  goto 92

state 72
	value:  IDENTIFIER '['.expr ']' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 94
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 73
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 95
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 74
	global_decl:  VAR IDENTIFIER '[' INUM ']' var_type.    (11)

	.  reduce 11 (src line 111)


state 75
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (13)

	.  reduce 13 (src line 116)


state 76
	block:  '{'.statements '}' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	.  error

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statements  goto 96
	statement  goto 97
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

state 77
	arg_decl:  IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	.  error

	var_type  goto 124

state 78
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (78)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	INCR  shift 67
	DECR  shift 68
	.  reduce 78 (src line 249)


state 79
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (79)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	INCR  shift 67
	DECR  shift 68
	.  reduce 79 (src line 250)


state 80
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (80)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 67
	DECR  shift 68
	.  reduce 80 (src line 251)


state 81
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (81)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 67
	DECR  shift 68
	.  reduce 81 (src line 252)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (82)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 67
	DECR  shift 68
	.  reduce 82 (src line 253)


state 83
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (83)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 83 (src line 254)


state 84
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (84)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 84 (src line 255)


state 85
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (85)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 85 (src line 256)


state 86
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (86)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 86 (src line 257)


state 87
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (87)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 87 (src line 258)


state 88
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (88)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 67
	DECR  shift 68
	.  reduce 88 (src line 259)


state 89
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (89)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	INCR  shift 67
	DECR  shift 68
	.  reduce 89 (src line 260)


state 90
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (90)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	INCR  shift 67
	DECR  shift 68
	.  reduce 90 (src line 261)


state 91
	expr:  '(' expr ')'.    (91)

	.  reduce 91 (src line 262)


state 92
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 125
	','  shift 126
	.  error


state 93
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (99)

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 99 (src line 278)


state 94
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	']'  shift 127
	.  error


state 95
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	']'  shift 128
	.  error


state 96
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	'}'  shift 129
	.  error

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statement  goto 130
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

state 97
	statements:  statement.    (20)

	.  reduce 20 (src line 134)


state 98
	statement:  eol.    (22)

	.  reduce 22 (src line 138)


state 99
	statement:  expr_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 131

state 100
	statement:  assign_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 132

state 101
	statement:  define_var_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 133

state 102
	statement:  return_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 134

state 103
	statement:  function_call_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 135

state 104
	statement:  if_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 136

state 105
	statement:  for_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 137

state 106
	statement:  break_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 138

state 107
	statement:  continue_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 139

state 108
	statement:  switch_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 140

state 109
	statement:  fallthrough_statement.eol 

	EOL  shift 8
	.  error

	eol  goto 141

state 110
	expr_statement:  uni_expr.    (34)
	expr:  uni_expr.    (76)

	EOL  reduce 34 (src line 152)
	'{'  reduce 34 (src line 152)
	.  reduce 76 (src line 247)


state 111
	assign_statement:  assign.    (35)

	.  reduce 35 (src line 155)


state 112
	define_var_statement:  define_var.    (36)

	.  reduce 36 (src line 158)


state 113
	return_statement:  RETURN.    (37)
	return_statement:  RETURN.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  reduce 37 (src line 161)

	expr  goto 142
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 114
	function_call_statement:  function_call.    (39)
	expr:  function_call.    (77)

	EOL  reduce 39 (src line 165)
	.  reduce 77 (src line 248)


state 115
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 143
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 116
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 145
	const  goto 35
	define_var  goto 147
	function_call  goto 39
	uni_expr  goto 38
	assign  goto 146
	value  goto 37
	for_init  goto 144

state 117
	break_statement:  BREAK.    (49)

	.  reduce 49 (src line 185)


state 118
	continue_statement:  CONTINUE.    (50)

	.  reduce 50 (src line 188)


state 119
	switch_statement:  SWITCH.expr '{' eols cases '}' 
	switch_statement:  SWITCH.expr '{' eols cases default_statement '}' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 148
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 120
	fallthrough_statement:  FALLTHROUGH.    (59)

	.  reduce 59 (src line 209)


state 121
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  error


state 122
	assign:  IDENTIFIER.assign_op expr 
	assign:  IDENTIFIER.'[' expr ']' assign_op expr 
	define_var:  IDENTIFIER.DECL_ASSIGN expr 
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (96)
	value:  IDENTIFIER.'[' expr ']' 

	P_EQ  shift 153
	M_EQ  shift 154
	A_EQ  shift 155
	S_EQ  shift 156
	MOD_EQ  shift 157
	ASSIGN  shift 152
	DECL_ASSIGN  shift 151
	'('  shift 71
	'['  shift 150
	.  reduce 96 (src line 272)

	assign_op  goto 149

state 123
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 
	define_var:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 158
	.  error


state 124
	arg_decl:  IDENTIFIER '[' INUM ']' var_type.    (18)

	.  reduce 18 (src line 126)


state 125
	function_call:  IDENTIFIER '(' args ')'.    (94)

	.  reduce 94 (src line 268)


state 126
	args:  args ','.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 159
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 127
	value:  IDENTIFIER '[' expr ']'.    (97)

	.  reduce 97 (src line 274)


state 128
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 160
	.  error


state 129
	block:  '{' statements '}'.    (19)

	.  reduce 19 (src line 131)


state 130
	statements:  statements statement.    (21)

	.  reduce 21 (src line 136)


state 131
	statement:  expr_statement eol.    (23)

	.  reduce 23 (src line 140)


state 132
	statement:  assign_statement eol.    (24)

	.  reduce 24 (src line 141)


state 133
	statement:  define_var_statement eol.    (25)

	.  reduce 25 (src line 142)


state 134
	statement:  return_statement eol.    (26)

	.  reduce 26 (src line 143)


state 135
	statement:  function_call_statement eol.    (27)

	.  reduce 27 (src line 144)


state 136
	statement:  if_statement eol.    (28)

	.  reduce 28 (src line 145)


state 137
	statement:  for_statement eol.    (29)

	.  reduce 29 (src line 146)


state 138
	statement:  break_statement eol.    (30)

	.  reduce 30 (src line 147)


state 139
	statement:  continue_statement eol.    (31)

	.  reduce 31 (src line 148)


state 140
	statement:  switch_statement eol.    (32)

	.  reduce 32 (src line 149)


state 141
	statement:  fallthrough_statement eol.    (33)

	.  reduce 33 (src line 150)


state 142
	return_statement:  RETURN expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 38 (src line 163)


state 143
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	'{'  shift 76
	.  error

	block  goto 161

state 144
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 162
	.  error


state 145
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	'{'  shift 76
	.  error

	block  goto 163

state 146
	for_init:  assign.    (43)

	.  reduce 43 (src line 173)


state 147
	for_init:  define_var.    (44)

	.  reduce 44 (src line 175)


state 148
	switch_statement:  SWITCH expr.'{' eols cases '}' 
	switch_statement:  SWITCH expr.'{' eols cases default_statement '}' 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	'{'  shift 164
	.  error


state 149
	assign:  IDENTIFIER assign_op.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 165
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 150
	assign:  IDENTIFIER '['.expr ']' assign_op expr 
	value:  IDENTIFIER '['.expr ']' 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 166
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 151
	define_var:  IDENTIFIER DECL_ASSIGN.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 167
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 152
	assign_op:  ASSIGN.    (60)

	.  reduce 60 (src line 216)


state 153
	assign_op:  P_EQ.    (61)

	.  reduce 61 (src line 218)


state 154
	assign_op:  M_EQ.    (62)

	.  reduce 62 (src line 219)


state 155
	assign_op:  A_EQ.    (63)

	.  reduce 63 (src line 220)


state 156
	assign_op:  S_EQ.    (64)

	.  reduce 64 (src line 221)


state 157
	assign_op:  MOD_EQ.    (65)

	.  reduce 65 (src line 222)


state 158
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 
	define_var:  VAR IDENTIFIER.'[' INUM ']' var_type 

	ASSIGN  shift 169
	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	'['  shift 170
	.  error

	var_type  goto 168

state 159
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (100)

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 100 (src line 279)


state 160
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (98)

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  reduce 98 (src line 276)

	expr  goto 93
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37
	args  goto 171

state 161
	if_statement:  IF expr block.    (40)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 172
	.  reduce 40 (src line 168)


state 162
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 173
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 163
	for_statement:  FOR expr block.    (48)

	.  reduce 48 (src line 183)


state 164
	switch_statement:  SWITCH expr '{'.eols cases '}' 
	switch_statement:  SWITCH expr '{'.eols cases default_statement '}' 

	EOL  shift 8
	.  error

	eol  goto 175
	eols  goto 174

state 165
	assign:  IDENTIFIER assign_op expr.    (66)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 66 (src line 224)


state 166
	assign:  IDENTIFIER '[' expr.']' assign_op expr 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	']'  shift 176
	.  error


state 167
	define_var:  IDENTIFIER DECL_ASSIGN expr.    (71)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 71 (src line 240)


state 168
	define_var:  VAR IDENTIFIER var_type.    (68)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 177
	.  reduce 68 (src line 236)


state 169
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 178
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 170
	define_var:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 179
	.  error


state 171
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 180
	','  shift 126
	.  error


state 172
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 115
	'{'  shift 76
	.  error

	block  goto 181
	if_statement  goto 182

state 173
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	';'  shift 183
	.  error


state 174
	switch_statement:  SWITCH expr '{' eols.cases '}' 
	switch_statement:  SWITCH expr '{' eols.cases default_statement '}' 
	eols:  eols.eol 

	CASE  shift 187
	EOL  shift 8
	.  error

	case_statement  goto 186
	cases  goto 184
	eol  goto 185

state 175
	eols:  eol.    (53)

	.  reduce 53 (src line 195)


state 176
	assign:  IDENTIFIER '[' expr ']'.assign_op expr 
	value:  IDENTIFIER '[' expr ']'.    (97)

	P_EQ  shift 153
	M_EQ  shift 154
	A_EQ  shift 155
	S_EQ  shift 156
	MOD_EQ  shift 157
	ASSIGN  shift 152
	.  reduce 97 (src line 274)

	assign_op  goto 188

state 177
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 189
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 178
	define_var:  VAR IDENTIFIER ASSIGN expr.    (70)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 70 (src line 239)


state 179
	define_var:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 190
	.  error


state 180
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (95)

	.  reduce 95 (src line 270)


state 181
	if_statement:  IF expr block ELSE block.    (41)

	.  reduce 41 (src line 170)


state 182
	if_statement:  IF expr block ELSE if_statement.    (42)

	.  reduce 42 (src line 171)


state 183
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 194
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 121
	const  goto 35
	function_call  goto 39
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	for_iterator  goto 191
	expr_statement  goto 193
	assign_statement  goto 192

state 184
	switch_statement:  SWITCH expr '{' eols cases.'}' 
	switch_statement:  SWITCH expr '{' eols cases.default_statement '}' 
	cases:  cases.case_statement 

	CASE  shift 187
	DEFAULT  shift 198
	'}'  shift 195
	.  error

	case_statement  goto 197
	default_statement  goto 196

state 185
	eols:  eols eol.    (54)

	.  reduce 54 (src line 197)


state 186
	cases:  case_statement.    (55)

	.  reduce 55 (src line 199)


state 187
	case_statement:  CASE.expr ':' statements 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 199
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 188
	assign:  IDENTIFIER '[' expr ']' assign_op.expr 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 44
	STRING_LITERAL  shift 41
	MINUS  shift 36
	SYSCALL  shift 45
	'('  shift 40
	.  error

	expr  goto 200
	const  goto 35
	function_call  goto 39
	uni_expr  goto 38
	value  goto 37

state 189
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (69)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 69 (src line 238)


state 190
	define_var:  VAR IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 22
	FLOAT  shift 23
	STRING  shift 24
	.  error

	var_type  goto 201

state 191
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 76
	.  error

	block  goto 202

state 192
	for_iterator:  assign_statement.    (45)

	.  reduce 45 (src line 177)


state 193
	for_iterator:  expr_statement.    (46)

	.  reduce 46 (src line 179)


state 194
	assign:  IDENTIFIER.assign_op expr 
	assign:  IDENTIFIER.'[' expr ']' assign_op expr 
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (96)
	value:  IDENTIFIER.'[' expr ']' 

	P_EQ  shift 153
	M_EQ  shift 154
	A_EQ  shift 155
	S_EQ  shift 156
	MOD_EQ  shift 157
	ASSIGN  shift 152
	'('  shift 71
	'['  shift 150
	.  reduce 96 (src line 272)

	assign_op  goto 149

state 195
	switch_statement:  SWITCH expr '{' eols cases '}'.    (51)

	.  reduce 51 (src line 191)


state 196
	switch_statement:  SWITCH expr '{' eols cases default_statement.'}' 

	'}'  shift 203
	.  error


state 197
	cases:  cases case_statement.    (56)

	.  reduce 56 (src line 201)


state 198
	default_statement:  DEFAULT.':' statements 

	':'  shift 204
	.  error


state 199
	case_statement:  CASE expr.':' statements 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	':'  shift 205
	.  error


state 200
	assign:  IDENTIFIER '[' expr ']' assign_op expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 54
	MINUS  shift 55
	ASTARISK  shift 56
	SLASH  shift 57
	PERCENT  shift 58
	EQ  shift 59
	NEQ  shift 60
	GT  shift 61
	GE  shift 62
	LT  shift 63
	LE  shift 64
	AND  shift 65
	OR  shift 66
	INCR  shift 67
	DECR  shift 68
	.  reduce 67 (src line 230)


state 201
	define_var:  VAR IDENTIFIER '[' INUM ']' var_type.    (72)

	.  reduce 72 (src line 241)


state 202
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (47)

	.  reduce 47 (src line 181)


state 203
	switch_statement:  SWITCH expr '{' eols cases default_statement '}'.    (52)

	.  reduce 52 (src line 193)


state 204
	default_statement:  DEFAULT ':'.statements 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	.  error

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statements  goto 206
	statement  goto 97
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

state 205
	case_statement:  CASE expr ':'.statements 

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	.  error

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statements  goto 207
	statement  goto 97
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

state 206
	statements:  statements.statement 
	default_statement:  DEFAULT ':' statements.    (58)

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	.  reduce 58 (src line 206)

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statement  goto 130
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

state 207
	statements:  statements.statement 
	case_statement:  CASE expr ':' statements.    (57)

	INUM  shift 42
	FNUM  shift 43
	IDENTIFIER  shift 122
	STRING_LITERAL  shift 41
	MINUS  shift 36
	VAR  shift 123
	IF  shift 115
	SWITCH  shift 119
	FALLTHROUGH  shift 120
	FOR  shift 116
	BREAK  shift 117
	CONTINUE  shift 118
	RETURN  shift 113
	SYSCALL  shift 45
	EOL  shift 8
	'('  shift 40
	.  reduce 57 (src line 203)

	expr  goto 121
	const  goto 35
	define_var  goto 112
	function_call  goto 114
	uni_expr  goto 110
	assign  goto 111
	value  goto 37
	statement  goto 130
	expr_statement  goto 99
	assign_statement  goto 100
	define_var_statement  goto 101
	return_statement  goto 102
	function_call_statement  goto 103
	if_statement  goto 104
	for_statement  goto 105
	break_statement  goto 106
	continue_statement  goto 107
	switch_statement  goto 108
	fallthrough_statement  goto 109
	eol  goto 98

61 terminals, 41 nonterminals
113 grammar rules, 208/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
90 working sets used
memory: parser 390/240000
96 extra closures
825 shift entries, 40 exceptions
128 goto entries
227 entries saved by goto default
Optimizer space used: output 579/240000
579 table entries, 128 zero
maximum spread: 59, maximum offset: 207
