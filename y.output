
state 0
	$accept: .program $end 

	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	define_or_state  goto 10
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 95)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 99)


state 4
	define_or_state:  function_define.eol 

	EOL  shift 7
	.  error

	eol  goto 11

state 5
	define_or_state:  global_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 12

state 6
	define_or_state:  function_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 13

state 7
	eol:  EOL.    (109)

	.  reduce 109 (src line 294)


state 8
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 14
	.  error


state 9
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 
	global_decl:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 15
	.  error


state 10
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 97)


state 11
	define_or_state:  function_define eol.    (4)

	.  reduce 4 (src line 101)


state 12
	define_or_state:  global_decl eol.    (5)

	.  reduce 5 (src line 102)


state 13
	define_or_state:  function_decl eol.    (6)

	.  reduce 6 (src line 103)


state 14
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 16
	.  error


state 15
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 
	global_decl:  VAR IDENTIFIER.'[' INUM ']' var_type 

	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	'['  shift 18
	.  error

	var_type  goto 17

state 16
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (12)

	IDENTIFIER  shift 24
	.  reduce 12 (src line 116)

	arg_decl  goto 23
	arg_list  goto 22

state 17
	global_decl:  VAR IDENTIFIER var_type.    (7)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 25
	.  reduce 7 (src line 105)


state 18
	global_decl:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 26
	.  error


state 19
	var_type:  INT.    (101)

	.  reduce 101 (src line 282)


state 20
	var_type:  FLOAT.    (102)

	.  reduce 102 (src line 284)


state 21
	var_type:  STRING.    (103)

	.  reduce 103 (src line 285)


state 22
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 27
	','  shift 28
	.  error


state 23
	arg_list:  arg_decl.    (13)

	.  reduce 13 (src line 118)


state 24
	arg_decl:  IDENTIFIER.var_type 
	arg_decl:  IDENTIFIER.'[' INUM ']' var_type 

	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	'['  shift 30
	.  error

	var_type  goto 29

state 25
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 31
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 26
	global_decl:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 43
	.  error


state 27
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (104)

	INT  shift 45
	FLOAT  shift 46
	STRING  shift 47
	VOID  shift 48
	.  reduce 104 (src line 287)

	function_type  goto 44

state 28
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 24
	.  error

	arg_decl  goto 49

state 29
	arg_decl:  IDENTIFIER var_type.    (15)

	.  reduce 15 (src line 121)


state 30
	arg_decl:  IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 50
	.  error


state 31
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (8)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 8 (src line 107)


state 32
	expr:  const.    (70)

	.  reduce 70 (src line 239)


state 33
	expr:  MINUS.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 66
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 34
	expr:  value.    (72)

	.  reduce 72 (src line 242)


state 35
	expr:  uni_expr.    (73)

	.  reduce 73 (src line 243)


state 36
	expr:  function_call.    (74)

	.  reduce 74 (src line 244)


state 37
	expr:  '('.expr ')' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 67
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 38
	const:  STRING_LITERAL.    (98)

	.  reduce 98 (src line 277)


state 39
	const:  INUM.    (99)

	.  reduce 99 (src line 279)


state 40
	const:  FNUM.    (100)

	.  reduce 100 (src line 280)


state 41
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (93)
	value:  IDENTIFIER.'[' expr ']' 

	'('  shift 68
	'['  shift 69
	.  reduce 93 (src line 268)


state 42
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 70
	.  error


state 43
	global_decl:  VAR IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	.  error

	var_type  goto 71

state 44
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (10)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 73
	.  reduce 10 (src line 110)

	block  goto 72

state 45
	function_type:  INT.    (105)

	.  reduce 105 (src line 289)


state 46
	function_type:  FLOAT.    (106)

	.  reduce 106 (src line 290)


state 47
	function_type:  STRING.    (107)

	.  reduce 107 (src line 291)


state 48
	function_type:  VOID.    (108)

	.  reduce 108 (src line 292)


state 49
	arg_list:  arg_list ',' arg_decl.    (14)

	.  reduce 14 (src line 119)


state 50
	arg_decl:  IDENTIFIER '[' INUM.']' var_type 

	']'  shift 74
	.  error


state 51
	expr:  expr PLUS.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 75
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 52
	expr:  expr MINUS.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 76
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 53
	expr:  expr ASTARISK.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 77
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 54
	expr:  expr SLASH.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 78
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 55
	expr:  expr PERCENT.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 79
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 56
	expr:  expr EQ.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 80
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 57
	expr:  expr NEQ.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 81
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 58
	expr:  expr GT.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 82
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 59
	expr:  expr GE.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 83
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 60
	expr:  expr LT.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 84
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 61
	expr:  expr LE.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 85
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 62
	expr:  expr AND.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 86
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 63
	expr:  expr OR.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 87
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 64
	uni_expr:  expr INCR.    (89)

	.  reduce 89 (src line 260)


state 65
	uni_expr:  expr DECR.    (90)

	.  reduce 90 (src line 262)


state 66
	expr:  MINUS expr.    (71)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 71 (src line 241)


state 67
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	')'  shift 88
	.  error


state 68
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (95)

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  reduce 95 (src line 272)

	expr  goto 90
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34
	args  goto 89

state 69
	value:  IDENTIFIER '['.expr ']' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 91
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 70
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 92
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 71
	global_decl:  VAR IDENTIFIER '[' INUM ']' var_type.    (9)

	.  reduce 9 (src line 108)


state 72
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (11)

	.  reduce 11 (src line 113)


state 73
	block:  '{'.statements '}' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	.  error

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statements  goto 93
	statement  goto 94
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

state 74
	arg_decl:  IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	.  error

	var_type  goto 121

state 75
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (75)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	INCR  shift 64
	DECR  shift 65
	.  reduce 75 (src line 245)


state 76
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (76)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	INCR  shift 64
	DECR  shift 65
	.  reduce 76 (src line 246)


state 77
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (77)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 64
	DECR  shift 65
	.  reduce 77 (src line 247)


state 78
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (78)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 64
	DECR  shift 65
	.  reduce 78 (src line 248)


state 79
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (79)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 64
	DECR  shift 65
	.  reduce 79 (src line 249)


state 80
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (80)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 80 (src line 250)


state 81
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (81)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 81 (src line 251)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (82)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 82 (src line 252)


state 83
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (83)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 83 (src line 253)


state 84
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (84)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 84 (src line 254)


state 85
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (85)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 64
	DECR  shift 65
	.  reduce 85 (src line 255)


state 86
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (86)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	INCR  shift 64
	DECR  shift 65
	.  reduce 86 (src line 256)


state 87
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (87)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	INCR  shift 64
	DECR  shift 65
	.  reduce 87 (src line 257)


state 88
	expr:  '(' expr ')'.    (88)

	.  reduce 88 (src line 258)


state 89
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 122
	','  shift 123
	.  error


state 90
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (96)

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 96 (src line 274)


state 91
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	']'  shift 124
	.  error


state 92
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	']'  shift 125
	.  error


state 93
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	'}'  shift 126
	.  error

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statement  goto 127
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

state 94
	statements:  statement.    (18)

	.  reduce 18 (src line 131)


state 95
	statement:  eol.    (20)

	.  reduce 20 (src line 135)


state 96
	statement:  expr_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 128

state 97
	statement:  assign_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 129

state 98
	statement:  define_var_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 130

state 99
	statement:  return_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 131

state 100
	statement:  function_call_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 132

state 101
	statement:  if_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 133

state 102
	statement:  for_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 134

state 103
	statement:  break_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 135

state 104
	statement:  continue_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 136

state 105
	statement:  switch_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 137

state 106
	statement:  fallthrough_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 138

state 107
	expr_statement:  uni_expr.    (32)
	expr:  uni_expr.    (73)

	EOL  reduce 32 (src line 149)
	'{'  reduce 32 (src line 149)
	.  reduce 73 (src line 243)


state 108
	assign_statement:  assign.    (33)

	.  reduce 33 (src line 152)


state 109
	define_var_statement:  define_var.    (34)

	.  reduce 34 (src line 155)


state 110
	return_statement:  RETURN.    (35)
	return_statement:  RETURN.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  reduce 35 (src line 158)

	expr  goto 139
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 111
	function_call_statement:  function_call.    (37)
	expr:  function_call.    (74)

	EOL  reduce 37 (src line 162)
	.  reduce 74 (src line 244)


state 112
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 140
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 113
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 142
	const  goto 32
	define_var  goto 144
	function_call  goto 36
	uni_expr  goto 35
	assign  goto 143
	value  goto 34
	for_init  goto 141

state 114
	break_statement:  BREAK.    (47)

	.  reduce 47 (src line 182)


state 115
	continue_statement:  CONTINUE.    (48)

	.  reduce 48 (src line 185)


state 116
	switch_statement:  SWITCH.expr '{' eols cases '}' 
	switch_statement:  SWITCH.expr '{' eols cases default_statement '}' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 145
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 117
	fallthrough_statement:  FALLTHROUGH.    (57)

	.  reduce 57 (src line 206)


state 118
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  error


state 119
	assign:  IDENTIFIER.assign_op expr 
	assign:  IDENTIFIER.'[' expr ']' assign_op expr 
	function_call:  IDENTIFIER.'(' args ')' 
	value:  IDENTIFIER.    (93)
	value:  IDENTIFIER.'[' expr ']' 

	P_EQ  shift 149
	M_EQ  shift 150
	A_EQ  shift 151
	S_EQ  shift 152
	MOD_EQ  shift 153
	ASSIGN  shift 148
	'('  shift 68
	'['  shift 147
	.  reduce 93 (src line 268)

	assign_op  goto 146

state 120
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 
	define_var:  VAR.IDENTIFIER '[' INUM ']' var_type 

	IDENTIFIER  shift 154
	.  error


state 121
	arg_decl:  IDENTIFIER '[' INUM ']' var_type.    (16)

	.  reduce 16 (src line 123)


state 122
	function_call:  IDENTIFIER '(' args ')'.    (91)

	.  reduce 91 (src line 264)


state 123
	args:  args ','.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 155
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 124
	value:  IDENTIFIER '[' expr ']'.    (94)

	.  reduce 94 (src line 270)


state 125
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 156
	.  error


state 126
	block:  '{' statements '}'.    (17)

	.  reduce 17 (src line 128)


state 127
	statements:  statements statement.    (19)

	.  reduce 19 (src line 133)


state 128
	statement:  expr_statement eol.    (21)

	.  reduce 21 (src line 137)


state 129
	statement:  assign_statement eol.    (22)

	.  reduce 22 (src line 138)


state 130
	statement:  define_var_statement eol.    (23)

	.  reduce 23 (src line 139)


state 131
	statement:  return_statement eol.    (24)

	.  reduce 24 (src line 140)


state 132
	statement:  function_call_statement eol.    (25)

	.  reduce 25 (src line 141)


state 133
	statement:  if_statement eol.    (26)

	.  reduce 26 (src line 142)


state 134
	statement:  for_statement eol.    (27)

	.  reduce 27 (src line 143)


state 135
	statement:  break_statement eol.    (28)

	.  reduce 28 (src line 144)


state 136
	statement:  continue_statement eol.    (29)

	.  reduce 29 (src line 145)


state 137
	statement:  switch_statement eol.    (30)

	.  reduce 30 (src line 146)


state 138
	statement:  fallthrough_statement eol.    (31)

	.  reduce 31 (src line 147)


state 139
	return_statement:  RETURN expr.    (36)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 36 (src line 160)


state 140
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	'{'  shift 73
	.  error

	block  goto 157

state 141
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 158
	.  error


state 142
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	'{'  shift 73
	.  error

	block  goto 159

state 143
	for_init:  assign.    (41)

	.  reduce 41 (src line 170)


state 144
	for_init:  define_var.    (42)

	.  reduce 42 (src line 172)


state 145
	switch_statement:  SWITCH expr.'{' eols cases '}' 
	switch_statement:  SWITCH expr.'{' eols cases default_statement '}' 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	'{'  shift 160
	.  error


state 146
	assign:  IDENTIFIER assign_op.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 161
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 147
	assign:  IDENTIFIER '['.expr ']' assign_op expr 
	value:  IDENTIFIER '['.expr ']' 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 162
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 148
	assign_op:  ASSIGN.    (58)

	.  reduce 58 (src line 213)


state 149
	assign_op:  P_EQ.    (59)

	.  reduce 59 (src line 215)


state 150
	assign_op:  M_EQ.    (60)

	.  reduce 60 (src line 216)


state 151
	assign_op:  A_EQ.    (61)

	.  reduce 61 (src line 217)


state 152
	assign_op:  S_EQ.    (62)

	.  reduce 62 (src line 218)


state 153
	assign_op:  MOD_EQ.    (63)

	.  reduce 63 (src line 219)


state 154
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 
	define_var:  VAR IDENTIFIER.'[' INUM ']' var_type 

	ASSIGN  shift 164
	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	'['  shift 165
	.  error

	var_type  goto 163

state 155
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (97)

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 97 (src line 275)


state 156
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (95)

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  reduce 95 (src line 272)

	expr  goto 90
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34
	args  goto 166

state 157
	if_statement:  IF expr block.    (38)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 167
	.  reduce 38 (src line 165)


state 158
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 168
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 159
	for_statement:  FOR expr block.    (46)

	.  reduce 46 (src line 180)


state 160
	switch_statement:  SWITCH expr '{'.eols cases '}' 
	switch_statement:  SWITCH expr '{'.eols cases default_statement '}' 

	EOL  shift 7
	.  error

	eol  goto 170
	eols  goto 169

state 161
	assign:  IDENTIFIER assign_op expr.    (64)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 64 (src line 221)


state 162
	assign:  IDENTIFIER '[' expr.']' assign_op expr 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	value:  IDENTIFIER '[' expr.']' 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	']'  shift 171
	.  error


state 163
	define_var:  VAR IDENTIFIER var_type.    (66)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 172
	.  reduce 66 (src line 233)


state 164
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 173
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 165
	define_var:  VAR IDENTIFIER '['.INUM ']' var_type 

	INUM  shift 174
	.  error


state 166
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 175
	','  shift 123
	.  error


state 167
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 112
	'{'  shift 73
	.  error

	block  goto 176
	if_statement  goto 177

state 168
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	';'  shift 178
	.  error


state 169
	switch_statement:  SWITCH expr '{' eols.cases '}' 
	switch_statement:  SWITCH expr '{' eols.cases default_statement '}' 
	eols:  eols.eol 

	CASE  shift 182
	EOL  shift 7
	.  error

	case_statement  goto 181
	cases  goto 179
	eol  goto 180

state 170
	eols:  eol.    (51)

	.  reduce 51 (src line 192)


state 171
	assign:  IDENTIFIER '[' expr ']'.assign_op expr 
	value:  IDENTIFIER '[' expr ']'.    (94)

	P_EQ  shift 149
	M_EQ  shift 150
	A_EQ  shift 151
	S_EQ  shift 152
	MOD_EQ  shift 153
	ASSIGN  shift 148
	.  reduce 94 (src line 270)

	assign_op  goto 183

state 172
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 184
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 173
	define_var:  VAR IDENTIFIER ASSIGN expr.    (68)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 68 (src line 236)


state 174
	define_var:  VAR IDENTIFIER '[' INUM.']' var_type 

	']'  shift 185
	.  error


state 175
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (92)

	.  reduce 92 (src line 266)


state 176
	if_statement:  IF expr block ELSE block.    (39)

	.  reduce 39 (src line 167)


state 177
	if_statement:  IF expr block ELSE if_statement.    (40)

	.  reduce 40 (src line 168)


state 178
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 118
	const  goto 32
	function_call  goto 36
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	for_iterator  goto 186
	expr_statement  goto 188
	assign_statement  goto 187

state 179
	switch_statement:  SWITCH expr '{' eols cases.'}' 
	switch_statement:  SWITCH expr '{' eols cases.default_statement '}' 
	cases:  cases.case_statement 

	CASE  shift 182
	DEFAULT  shift 192
	'}'  shift 189
	.  error

	case_statement  goto 191
	default_statement  goto 190

state 180
	eols:  eols eol.    (52)

	.  reduce 52 (src line 194)


state 181
	cases:  case_statement.    (53)

	.  reduce 53 (src line 196)


state 182
	case_statement:  CASE.expr ':' statements 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 193
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 183
	assign:  IDENTIFIER '[' expr ']' assign_op.expr 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 41
	STRING_LITERAL  shift 38
	MINUS  shift 33
	SYSCALL  shift 42
	'('  shift 37
	.  error

	expr  goto 194
	const  goto 32
	function_call  goto 36
	uni_expr  goto 35
	value  goto 34

state 184
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 67 (src line 235)


state 185
	define_var:  VAR IDENTIFIER '[' INUM ']'.var_type 

	INT  shift 19
	FLOAT  shift 20
	STRING  shift 21
	.  error

	var_type  goto 195

state 186
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 73
	.  error

	block  goto 196

state 187
	for_iterator:  assign_statement.    (43)

	.  reduce 43 (src line 174)


state 188
	for_iterator:  expr_statement.    (44)

	.  reduce 44 (src line 176)


state 189
	switch_statement:  SWITCH expr '{' eols cases '}'.    (49)

	.  reduce 49 (src line 188)


state 190
	switch_statement:  SWITCH expr '{' eols cases default_statement.'}' 

	'}'  shift 197
	.  error


state 191
	cases:  cases case_statement.    (54)

	.  reduce 54 (src line 198)


state 192
	default_statement:  DEFAULT.':' statements 

	':'  shift 198
	.  error


state 193
	case_statement:  CASE expr.':' statements 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	':'  shift 199
	.  error


state 194
	assign:  IDENTIFIER '[' expr ']' assign_op expr.    (65)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 51
	MINUS  shift 52
	ASTARISK  shift 53
	SLASH  shift 54
	PERCENT  shift 55
	EQ  shift 56
	NEQ  shift 57
	GT  shift 58
	GE  shift 59
	LT  shift 60
	LE  shift 61
	AND  shift 62
	OR  shift 63
	INCR  shift 64
	DECR  shift 65
	.  reduce 65 (src line 227)


state 195
	define_var:  VAR IDENTIFIER '[' INUM ']' var_type.    (69)

	.  reduce 69 (src line 237)


state 196
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (45)

	.  reduce 45 (src line 178)


state 197
	switch_statement:  SWITCH expr '{' eols cases default_statement '}'.    (50)

	.  reduce 50 (src line 190)


state 198
	default_statement:  DEFAULT ':'.statements 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	.  error

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statements  goto 200
	statement  goto 94
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

state 199
	case_statement:  CASE expr ':'.statements 

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	.  error

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statements  goto 201
	statement  goto 94
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

state 200
	statements:  statements.statement 
	default_statement:  DEFAULT ':' statements.    (56)

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	.  reduce 56 (src line 203)

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statement  goto 127
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

state 201
	statements:  statements.statement 
	case_statement:  CASE expr ':' statements.    (55)

	INUM  shift 39
	FNUM  shift 40
	IDENTIFIER  shift 119
	STRING_LITERAL  shift 38
	MINUS  shift 33
	VAR  shift 120
	IF  shift 112
	SWITCH  shift 116
	FALLTHROUGH  shift 117
	FOR  shift 113
	BREAK  shift 114
	CONTINUE  shift 115
	RETURN  shift 110
	SYSCALL  shift 42
	EOL  shift 7
	'('  shift 37
	.  reduce 55 (src line 200)

	expr  goto 118
	const  goto 32
	define_var  goto 109
	function_call  goto 111
	uni_expr  goto 107
	assign  goto 108
	value  goto 34
	statement  goto 127
	expr_statement  goto 96
	assign_statement  goto 97
	define_var_statement  goto 98
	return_statement  goto 99
	function_call_statement  goto 100
	if_statement  goto 101
	for_statement  goto 102
	break_statement  goto 103
	continue_statement  goto 104
	switch_statement  goto 105
	fallthrough_statement  goto 106
	eol  goto 95

60 terminals, 40 nonterminals
110 grammar rules, 202/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
89 working sets used
memory: parser 381/240000
97 extra closures
791 shift entries, 40 exceptions
126 goto entries
221 entries saved by goto default
Optimizer space used: output 583/240000
583 table entries, 145 zero
maximum spread: 58, maximum offset: 201
