
state 0
	$accept: .program $end 

	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	program  goto 1
	define_or_state  goto 2
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 1
	$accept:  program.$end 
	program:  program.define_or_state 

	$end  accept
	VAR  shift 9
	FUNC  shift 8
	EOL  shift 7
	.  error

	define_or_state  goto 10
	eol  goto 3
	function_define  goto 4
	global_decl  goto 5
	function_decl  goto 6

state 2
	program:  define_or_state.    (1)

	.  reduce 1 (src line 85)


state 3
	define_or_state:  eol.    (3)

	.  reduce 3 (src line 89)


state 4
	define_or_state:  function_define.eol 

	EOL  shift 7
	.  error

	eol  goto 11

state 5
	define_or_state:  global_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 12

state 6
	define_or_state:  function_decl.eol 

	EOL  shift 7
	.  error

	eol  goto 13

state 7
	eol:  EOL.    (88)

	.  reduce 88 (src line 241)


state 8
	function_decl:  FUNC.IDENTIFIER '(' arg_list ')' function_type 
	function_define:  FUNC.IDENTIFIER '(' arg_list ')' function_type block 

	IDENTIFIER  shift 14
	.  error


state 9
	global_decl:  VAR.IDENTIFIER var_type 
	global_decl:  VAR.IDENTIFIER var_type ASSIGN expr 

	IDENTIFIER  shift 15
	.  error


state 10
	program:  program define_or_state.    (2)

	.  reduce 2 (src line 87)


state 11
	define_or_state:  function_define eol.    (4)

	.  reduce 4 (src line 91)


state 12
	define_or_state:  global_decl eol.    (5)

	.  reduce 5 (src line 92)


state 13
	define_or_state:  function_decl eol.    (6)

	.  reduce 6 (src line 93)


state 14
	function_decl:  FUNC IDENTIFIER.'(' arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER.'(' arg_list ')' function_type block 

	'('  shift 16
	.  error


state 15
	global_decl:  VAR IDENTIFIER.var_type 
	global_decl:  VAR IDENTIFIER.var_type ASSIGN expr 

	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 17

state 16
	function_decl:  FUNC IDENTIFIER '('.arg_list ')' function_type 
	function_define:  FUNC IDENTIFIER '('.arg_list ')' function_type block 
	arg_list: .    (11)

	IDENTIFIER  shift 23
	.  reduce 11 (src line 105)

	arg_decl  goto 22
	arg_list  goto 21

state 17
	global_decl:  VAR IDENTIFIER var_type.    (7)
	global_decl:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 24
	.  reduce 7 (src line 95)


state 18
	var_type:  INT.    (80)

	.  reduce 80 (src line 229)


state 19
	var_type:  FLOAT.    (81)

	.  reduce 81 (src line 231)


state 20
	var_type:  STRING.    (82)

	.  reduce 82 (src line 232)


state 21
	function_decl:  FUNC IDENTIFIER '(' arg_list.')' function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list.')' function_type block 
	arg_list:  arg_list.',' arg_decl 

	')'  shift 25
	','  shift 26
	.  error


state 22
	arg_list:  arg_decl.    (12)

	.  reduce 12 (src line 107)


state 23
	arg_decl:  IDENTIFIER.var_type 

	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 27

state 24
	global_decl:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 28
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 25
	function_decl:  FUNC IDENTIFIER '(' arg_list ')'.function_type 
	function_define:  FUNC IDENTIFIER '(' arg_list ')'.function_type block 
	function_type: .    (83)

	INT  shift 40
	FLOAT  shift 41
	STRING  shift 42
	VOID  shift 43
	.  reduce 83 (src line 234)

	function_type  goto 39

state 26
	arg_list:  arg_list ','.arg_decl 

	IDENTIFIER  shift 23
	.  error

	arg_decl  goto 44

state 27
	arg_decl:  IDENTIFIER var_type.    (14)

	.  reduce 14 (src line 110)


state 28
	global_decl:  VAR IDENTIFIER var_type ASSIGN expr.    (8)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 8 (src line 97)


state 29
	expr:  const.    (51)

	.  reduce 51 (src line 190)


state 30
	expr:  MINUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 60
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 31
	expr:  IDENTIFIER.    (53)
	function_call:  IDENTIFIER.'(' args ')' 

	'('  shift 61
	.  reduce 53 (src line 193)


state 32
	expr:  uni_expr.    (54)

	.  reduce 54 (src line 194)


state 33
	expr:  function_call.    (55)

	.  reduce 55 (src line 195)


state 34
	expr:  '('.expr ')' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 62
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 35
	const:  STRING_LITERAL.    (77)

	.  reduce 77 (src line 224)


state 36
	const:  INUM.    (78)

	.  reduce 78 (src line 226)


state 37
	const:  FNUM.    (79)

	.  reduce 79 (src line 227)


state 38
	function_call:  SYSCALL.'[' expr ']' '(' args ')' 

	'['  shift 63
	.  error


state 39
	function_decl:  FUNC IDENTIFIER '(' arg_list ')' function_type.    (9)
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type.block 

	'{'  shift 65
	.  reduce 9 (src line 99)

	block  goto 64

state 40
	function_type:  INT.    (84)

	.  reduce 84 (src line 236)


state 41
	function_type:  FLOAT.    (85)

	.  reduce 85 (src line 237)


state 42
	function_type:  STRING.    (86)

	.  reduce 86 (src line 238)


state 43
	function_type:  VOID.    (87)

	.  reduce 87 (src line 239)


state 44
	arg_list:  arg_list ',' arg_decl.    (13)

	.  reduce 13 (src line 108)


state 45
	expr:  expr PLUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 66
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 46
	expr:  expr MINUS.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 67
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 47
	expr:  expr ASTARISK.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 68
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 48
	expr:  expr SLASH.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 69
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 49
	expr:  expr PERCENT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 70
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 50
	expr:  expr EQ.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 71
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 51
	expr:  expr NEQ.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 72
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 52
	expr:  expr GT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 73
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 53
	expr:  expr GE.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 74
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 54
	expr:  expr LT.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 75
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 55
	expr:  expr LE.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 76
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 56
	expr:  expr AND.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 77
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 57
	expr:  expr OR.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 78
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 58
	uni_expr:  expr INCR.    (70)

	.  reduce 70 (src line 211)


state 59
	uni_expr:  expr DECR.    (71)

	.  reduce 71 (src line 213)


state 60
	expr:  MINUS expr.    (52)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	.  reduce 52 (src line 192)


state 61
	function_call:  IDENTIFIER '('.args ')' 
	args: .    (74)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 74 (src line 219)

	expr  goto 80
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32
	args  goto 79

state 62
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  '(' expr.')' 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	')'  shift 81
	.  error


state 63
	function_call:  SYSCALL '['.expr ']' '(' args ')' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 82
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 64
	function_define:  FUNC IDENTIFIER '(' arg_list ')' function_type block.    (10)

	.  reduce 10 (src line 102)


state 65
	block:  '{'.statements '}' 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 101
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 102
	IF  shift 98
	FOR  shift 99
	RETURN  shift 96
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	.  error

	expr  goto 100
	const  goto 29
	define_var  goto 95
	function_call  goto 97
	uni_expr  goto 93
	assign  goto 94
	statements  goto 83
	statement  goto 84
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	eol  goto 85

state 66
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (56)
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	INCR  shift 58
	DECR  shift 59
	.  reduce 56 (src line 196)


state 67
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr MINUS expr.    (57)
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	INCR  shift 58
	DECR  shift 59
	.  reduce 57 (src line 197)


state 68
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr ASTARISK expr.    (58)
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 58 (src line 198)


state 69
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr SLASH expr.    (59)
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 59 (src line 199)


state 70
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr PERCENT expr.    (60)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	INCR  shift 58
	DECR  shift 59
	.  reduce 60 (src line 200)


state 71
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (61)
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 61 (src line 201)


state 72
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (62)
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 62 (src line 202)


state 73
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (63)
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 63 (src line 203)


state 74
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (64)
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 64 (src line 204)


state 75
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (65)
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 65 (src line 205)


state 76
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (66)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  error
	NEQ  error
	GT  error
	GE  error
	LT  error
	LE  error
	INCR  shift 58
	DECR  shift 59
	.  reduce 66 (src line 206)


state 77
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (67)
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	INCR  shift 58
	DECR  shift 59
	.  reduce 67 (src line 207)


state 78
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (68)
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	INCR  shift 58
	DECR  shift 59
	.  reduce 68 (src line 208)


state 79
	function_call:  IDENTIFIER '(' args.')' 
	args:  args.',' expr 

	')'  shift 103
	','  shift 104
	.  error


state 80
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  expr.    (75)

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 75 (src line 221)


state 81
	expr:  '(' expr ')'.    (69)

	.  reduce 69 (src line 209)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	function_call:  SYSCALL '[' expr.']' '(' args ')' 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	']'  shift 105
	.  error


state 83
	block:  '{' statements.'}' 
	statements:  statements.statement 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 101
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 102
	IF  shift 98
	FOR  shift 99
	RETURN  shift 96
	SYSCALL  shift 38
	EOL  shift 7
	'('  shift 34
	'}'  shift 106
	.  error

	expr  goto 100
	const  goto 29
	define_var  goto 95
	function_call  goto 97
	uni_expr  goto 93
	assign  goto 94
	statement  goto 107
	expr_statement  goto 86
	assign_statement  goto 87
	define_var_statement  goto 88
	return_statement  goto 89
	function_call_statement  goto 90
	if_statement  goto 91
	for_statement  goto 92
	eol  goto 85

state 84
	statements:  statement.    (16)

	.  reduce 16 (src line 119)


state 85
	statement:  eol.    (18)

	.  reduce 18 (src line 123)


state 86
	statement:  expr_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 108

state 87
	statement:  assign_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 109

state 88
	statement:  define_var_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 110

state 89
	statement:  return_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 111

state 90
	statement:  function_call_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 112

state 91
	statement:  if_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 113

state 92
	statement:  for_statement.eol 

	EOL  shift 7
	.  error

	eol  goto 114

state 93
	expr_statement:  uni_expr.    (26)
	expr:  uni_expr.    (54)

	EOL  reduce 26 (src line 133)
	'{'  reduce 26 (src line 133)
	.  reduce 54 (src line 194)


state 94
	assign_statement:  assign.    (27)

	.  reduce 27 (src line 136)


state 95
	define_var_statement:  define_var.    (28)

	.  reduce 28 (src line 139)


state 96
	return_statement:  RETURN.    (29)
	return_statement:  RETURN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 29 (src line 142)

	expr  goto 115
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 97
	function_call_statement:  function_call.    (31)
	expr:  function_call.    (55)

	EOL  reduce 31 (src line 146)
	.  reduce 55 (src line 195)


state 98
	if_statement:  IF.expr block 
	if_statement:  IF.expr block ELSE block 
	if_statement:  IF.expr block ELSE if_statement 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 116
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 99
	for_statement:  FOR.for_init ';' expr ';' for_iterator block 
	for_statement:  FOR.expr block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 101
	STRING_LITERAL  shift 35
	MINUS  shift 30
	VAR  shift 102
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 118
	const  goto 29
	define_var  goto 120
	function_call  goto 33
	uni_expr  goto 32
	assign  goto 119
	for_init  goto 117

state 100
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  error


state 101
	assign:  IDENTIFIER.assign_op expr 
	expr:  IDENTIFIER.    (53)
	function_call:  IDENTIFIER.'(' args ')' 

	P_EQ  shift 123
	M_EQ  shift 124
	A_EQ  shift 125
	S_EQ  shift 126
	MOD_EQ  shift 127
	ASSIGN  shift 122
	'('  shift 61
	.  reduce 53 (src line 193)

	assign_op  goto 121

state 102
	define_var:  VAR.IDENTIFIER var_type 
	define_var:  VAR.IDENTIFIER var_type ASSIGN expr 
	define_var:  VAR.IDENTIFIER ASSIGN expr 

	IDENTIFIER  shift 128
	.  error


state 103
	function_call:  IDENTIFIER '(' args ')'.    (72)

	.  reduce 72 (src line 215)


state 104
	args:  args ','.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 129
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 105
	function_call:  SYSCALL '[' expr ']'.'(' args ')' 

	'('  shift 130
	.  error


state 106
	block:  '{' statements '}'.    (15)

	.  reduce 15 (src line 116)


state 107
	statements:  statements statement.    (17)

	.  reduce 17 (src line 121)


state 108
	statement:  expr_statement eol.    (19)

	.  reduce 19 (src line 125)


state 109
	statement:  assign_statement eol.    (20)

	.  reduce 20 (src line 126)


state 110
	statement:  define_var_statement eol.    (21)

	.  reduce 21 (src line 127)


state 111
	statement:  return_statement eol.    (22)

	.  reduce 22 (src line 128)


state 112
	statement:  function_call_statement eol.    (23)

	.  reduce 23 (src line 129)


state 113
	statement:  if_statement eol.    (24)

	.  reduce 24 (src line 130)


state 114
	statement:  for_statement eol.    (25)

	.  reduce 25 (src line 131)


state 115
	return_statement:  RETURN expr.    (30)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 30 (src line 144)


state 116
	if_statement:  IF expr.block 
	if_statement:  IF expr.block ELSE block 
	if_statement:  IF expr.block ELSE if_statement 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	'{'  shift 65
	.  error

	block  goto 131

state 117
	for_statement:  FOR for_init.';' expr ';' for_iterator block 

	';'  shift 132
	.  error


state 118
	for_statement:  FOR expr.block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	'{'  shift 65
	.  error

	block  goto 133

state 119
	for_init:  assign.    (35)

	.  reduce 35 (src line 154)


state 120
	for_init:  define_var.    (36)

	.  reduce 36 (src line 156)


state 121
	assign:  IDENTIFIER assign_op.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 134
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 122
	assign_op:  ASSIGN.    (41)

	.  reduce 41 (src line 170)


state 123
	assign_op:  P_EQ.    (42)

	.  reduce 42 (src line 172)


state 124
	assign_op:  M_EQ.    (43)

	.  reduce 43 (src line 173)


state 125
	assign_op:  A_EQ.    (44)

	.  reduce 44 (src line 174)


state 126
	assign_op:  S_EQ.    (45)

	.  reduce 45 (src line 175)


state 127
	assign_op:  MOD_EQ.    (46)

	.  reduce 46 (src line 176)


state 128
	define_var:  VAR IDENTIFIER.var_type 
	define_var:  VAR IDENTIFIER.var_type ASSIGN expr 
	define_var:  VAR IDENTIFIER.ASSIGN expr 

	ASSIGN  shift 136
	INT  shift 18
	FLOAT  shift 19
	STRING  shift 20
	.  error

	var_type  goto 135

state 129
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 
	args:  args ',' expr.    (76)

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 76 (src line 222)


state 130
	function_call:  SYSCALL '[' expr ']' '('.args ')' 
	args: .    (74)

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  reduce 74 (src line 219)

	expr  goto 80
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32
	args  goto 137

state 131
	if_statement:  IF expr block.    (32)
	if_statement:  IF expr block.ELSE block 
	if_statement:  IF expr block.ELSE if_statement 

	ELSE  shift 138
	.  reduce 32 (src line 149)


state 132
	for_statement:  FOR for_init ';'.expr ';' for_iterator block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 139
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 133
	for_statement:  FOR expr block.    (40)

	.  reduce 40 (src line 164)


state 134
	assign:  IDENTIFIER assign_op expr.    (47)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 47 (src line 178)


state 135
	define_var:  VAR IDENTIFIER var_type.    (48)
	define_var:  VAR IDENTIFIER var_type.ASSIGN expr 

	ASSIGN  shift 140
	.  reduce 48 (src line 185)


state 136
	define_var:  VAR IDENTIFIER ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 141
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 137
	function_call:  SYSCALL '[' expr ']' '(' args.')' 
	args:  args.',' expr 

	')'  shift 142
	','  shift 104
	.  error


state 138
	if_statement:  IF expr block ELSE.block 
	if_statement:  IF expr block ELSE.if_statement 

	IF  shift 98
	'{'  shift 65
	.  error

	block  goto 143
	if_statement  goto 144

state 139
	for_statement:  FOR for_init ';' expr.';' for_iterator block 
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	';'  shift 145
	.  error


state 140
	define_var:  VAR IDENTIFIER var_type ASSIGN.expr 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 31
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 146
	const  goto 29
	function_call  goto 33
	uni_expr  goto 32

state 141
	define_var:  VAR IDENTIFIER ASSIGN expr.    (50)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 50 (src line 188)


state 142
	function_call:  SYSCALL '[' expr ']' '(' args ')'.    (73)

	.  reduce 73 (src line 217)


state 143
	if_statement:  IF expr block ELSE block.    (33)

	.  reduce 33 (src line 151)


state 144
	if_statement:  IF expr block ELSE if_statement.    (34)

	.  reduce 34 (src line 152)


state 145
	for_statement:  FOR for_init ';' expr ';'.for_iterator block 

	INUM  shift 36
	FNUM  shift 37
	IDENTIFIER  shift 101
	STRING_LITERAL  shift 35
	MINUS  shift 30
	SYSCALL  shift 38
	'('  shift 34
	.  error

	expr  goto 100
	const  goto 29
	function_call  goto 33
	uni_expr  goto 93
	assign  goto 94
	for_iterator  goto 147
	expr_statement  goto 149
	assign_statement  goto 148

state 146
	define_var:  VAR IDENTIFIER var_type ASSIGN expr.    (49)
	expr:  expr.PLUS expr 
	expr:  expr.MINUS expr 
	expr:  expr.ASTARISK expr 
	expr:  expr.SLASH expr 
	expr:  expr.PERCENT expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.GT expr 
	expr:  expr.GE expr 
	expr:  expr.LT expr 
	expr:  expr.LE expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	uni_expr:  expr.INCR 
	uni_expr:  expr.DECR 

	PLUS  shift 45
	MINUS  shift 46
	ASTARISK  shift 47
	SLASH  shift 48
	PERCENT  shift 49
	EQ  shift 50
	NEQ  shift 51
	GT  shift 52
	GE  shift 53
	LT  shift 54
	LE  shift 55
	AND  shift 56
	OR  shift 57
	INCR  shift 58
	DECR  shift 59
	.  reduce 49 (src line 187)


state 147
	for_statement:  FOR for_init ';' expr ';' for_iterator.block 

	'{'  shift 65
	.  error

	block  goto 150

state 148
	for_iterator:  assign_statement.    (37)

	.  reduce 37 (src line 158)


state 149
	for_iterator:  expr_statement.    (38)

	.  reduce 38 (src line 160)


state 150
	for_statement:  FOR for_init ';' expr ';' for_iterator block.    (39)

	.  reduce 39 (src line 162)


60 terminals, 31 nonterminals
89 grammar rules, 151/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
80 working sets used
memory: parser 209/240000
63 extra closures
567 shift entries, 40 exceptions
89 goto entries
98 entries saved by goto default
Optimizer space used: output 348/240000
348 table entries, 49 zero
maximum spread: 58, maximum offset: 147
